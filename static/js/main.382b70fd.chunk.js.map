{"version":3,"sources":["components/ui/button/cancel/cancel-button.module.css","components/projects/create/project-create.module.css","store/reducers/reducer-authorization.js","store/reducers/reducer-creating.js","store/reducers/reducer-projects.js","store/reducers/reducer-editor.js","store/reducers/reducer-request.js","store/reducers/reducer-invitation.js","store/root-reducer.js","serviceWorker.js","components/ui/button/button.js","components/ui/input/input.js","firebase/firebase.js","store/actions/actions-authorization.js","pages/authorization/authorization.js","components/ui/button/cancel/cancel-button.js","pages/editor/editor.js","store/actions/actions-editor.js","store/actions/actions-request.js","pages/request-participation/request.js","pages/creating/creating.js","store/actions/actions-creating.js","store/actions/actions-projects.js","components/projects/item/projects-item.js","components/projects/list/projects-list.js","components/projects/info/project-info.js","components/projects/create/project-create.js","components/motivation/motivation.js","components/two-page-working-space/working-space.js","store/actions/actions-invitation.js","pages/invitation/invitation.js","pages/other-projects/other-projects.js","pages/own-projects/own-projects.js","pages/loading/loading.js","components/Root.js","index.js","components/projects/info/project-info.module.css","components/projects/item/projects-item.module.css","pages/loading/loading.module.css","pages/editor/editor.module.css","pages/creating/creating.module.css","components/motivation/motivation.module.css","components/ui/input/input.module.css","pages/authorization/authorization.module.css","pages/request-participation/request.module.css","components/projects/list/projects-list.module.css","components/two-page-working-space/working-space.module.css","components/ui/button/button.module.css"],"names":["module","exports","cancelButton","projectCreate","initialState","userName","userEmail","userPassword","isUserAuthorized","uid","uName","nameProject","descriptionProject","userProjectsIds","ownProjectsFreeData","otherProjectsFreeData","ownProjectsPage","title","buttons","text","link","dynamicLink","changeProjectListButton","otherProjectsPage","selectedId","projectBody","motivation","invitationPage","projectRequests","combineReducers","authorization","state","arguments","length","undefined","action","type","Object","objectSpread","payload","creating","projects","own","other","editor","request","invitation","Boolean","window","location","hostname","match","Button","props","styleFromParent","styleButton","react_default","a","createElement","className","concat","styles","button","onClick","onClickButton","Input","labelBlock","name","input","onChange","onChangeInput","value","inputValue","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","Firebase","classCallCheck","this","auth","db","usersPath","freeDataPath","mainDataPath","requestsPath","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","_this","Promise","resolve","onAuthStateChanged","description","now","Date","creatingDate","getDate","getMonth","getFullYear","ref","child","push","key","set","usersIds","usersNames","body","once","updates","update","requests","projectFreeData","changeUserStatus","authData","status","Authorization","possibleConstructorReturn","getPrototypeOf","call","react_router","to","event","onChangeName","onChangeEmail","onChangePassword","buttonsContainer","react_router_dom","button_button","onSignIn","onSignUp","Component","connect","scope","dispatch","getState","stateAuthorization","signIn","then","catch","err","console","log","message","register","error","errorCode","code","errorMessage","target","changeName","changeEmail","changePassword","CancelButton","onClickCancel","Editor","id","params","getProjectBody","react_contenteditable_default","projectText","html","onChangeProjectText","cancel_button","onPushChanges","bind","editorState","authState","_ref","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","getMainData","sent","val","stop","_x","apply","changeProjectText","_ref2","_callee2","_context2","updateProjectBody","_x2","_x3","pushProjectChanges","addRequest","otherRequest","requestState","authorizationState","ownRequest","sendRequest","setInitialState","t0","onChangeMotivation","changeMotivation","onSendRequest","checkExistingRequests","onCancelRequest","creatingState","changeNameProject","onChangeDescription","changeDescriptionProject","createNewProject","stateCreating","creatingName","creatingDescription","setIdsAndFreeData","projectsIds","ownProjectsIds","_usersIds","getUsersIds","hasOwnProperty","includes","pushProjectsIdsToState","setFreeData","freeData","projectsFreeData","ownProjectsData","otherProjectsData","getFreeData","pushFreeDataToState","onSelectItem","pageData","projectsData","onClickHandler","map","project","index","buttonData","projectLink","itemButton","projectClassName","projectItems","projectItemsSelected","itemText","ProjectsList","projectsList","style","textAlign","projects_item","selectedProjectId","projectData","filter","date","projectInfo","titleType","ProjectCreate","Motivation","motivationText","denyButton","WorkingSpace","withBlockForCreating","_ref$onClickHandler","rightBlock","rightColumn","project_info","project_create","motivation_motivation","projects_list","setStateRequests","Invitation","_this$props","setRequests","clearId","_this$props2","working_space","invitationState","response","getProjectRequests","setProjectRequests","projectsState","OwnProjects","getDatabase","onLeaveProject","_ref3","_callee3","responseUserIds","projectUsersIds","updatedUsersIds","updatedProjectFreeData","responseFreeData","updatedUsersNames","_context3","toConsumableArray","updateUsersInProject","_x4","_x5","removeUserFromProject","Loading","handleAuthStatus","path","pathname","loading","spinner","doubleBounce1","doubleBounce2","handlerUserAuth","Root","store","es","exact","component","RequestParticipation","Creating","OtherProjects","createStore","RootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","components_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister","sk-bounce"],"mappings":"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","file":"static/js/main.382b70fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cancelButton\":\"cancel-button_cancelButton__3hcP9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectCreate\":\"project-create_projectCreate__1W4WX\"};","\r\nconst initialState = {\r\n    userName: '',\r\n    userEmail: '',\r\n    userPassword: '',\r\n    isUserAuthorized: 0,\r\n    uid: 0,\r\n    uName: ''\r\n};\r\n\r\nexport default function authorization(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'CHANGE_NAME':\r\n            return {\r\n                ...state,\r\n                userName: action.payload.userName\r\n            };\r\n        case 'CHANGE_EMAIL':\r\n            return {\r\n                ...state,\r\n                userEmail: action.payload.userEmail\r\n            };\r\n        case 'CHANGE_PASSWORD':\r\n            return {\r\n                ...state,\r\n                userPassword: action.payload.userPassword\r\n            };\r\n        case 'CLEAR_INPUTS':\r\n            return {\r\n                ...state,\r\n                userName: action.payload.userName,\r\n                userEmail: action.payload.userEmail,\r\n                userPassword: action.payload.userPassword\r\n            };\r\n        case 'CHANGE_USER_STATUS':\r\n            return {\r\n                ...state,\r\n                uid: action.payload.uid,\r\n                isUserAuthorized: action.payload.isUserAuthorized,\r\n                uName: action.payload.uName\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nconst initialState = {\r\n    nameProject: 'Name Project',\r\n    descriptionProject: 'It\\'s my project...'\r\n};\r\n\r\nexport default function creating(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'CHANGE_NAME_PROJECT':\r\n            return {\r\n                ...state,\r\n                nameProject: action.payload.nameProject\r\n            };\r\n        case 'CHANGE_DESCRIPTION_PROJECT':\r\n            return {\r\n                ...state,\r\n                descriptionProject: action.payload.descriptionProject\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","\r\nconst initialState = {\r\n    userProjectsIds: [],\r\n    ownProjectsFreeData: [],\r\n    otherProjectsFreeData: [],\r\n    ownProjectsPage: {\r\n        title: 'Your own projects',\r\n        buttons: [\r\n            {\r\n                text: 'Edit',\r\n                link: '/editor/',\r\n                dynamicLink: true\r\n            },\r\n            {\r\n                text: 'Leave',\r\n                link: ''\r\n            },\r\n            {\r\n                text: 'Invite',\r\n                link: '/invitations/',\r\n                dynamicLink: true\r\n            }\r\n        ],\r\n        changeProjectListButton: {\r\n            text: 'See other projects',\r\n            link: '/other-projects'\r\n        }\r\n    },\r\n    otherProjectsPage: {\r\n        title: 'Projects of other users',\r\n        buttons: [\r\n            {\r\n                text: 'Request',\r\n                link: '/request/',\r\n                dynamicLink: true\r\n            }\r\n        ],\r\n        changeProjectListButton: {\r\n            text: 'See your own projects',\r\n            link: '/own-projects'\r\n        }\r\n    },\r\n    selectedId: ''\r\n};\r\n\r\nexport default function projects(state = initialState, action) {\r\n  switch (action.type) {\r\n      case 'SET_OWN_PROJECTS_IDS':\r\n          return {\r\n              ...state,\r\n              userProjectsIds: action.payload\r\n          };\r\n      case 'SET_PROJECTS_FREE_DATA':\r\n          return {\r\n              ...state,\r\n              ownProjectsFreeData: action.payload.own,\r\n              otherProjectsFreeData: action.payload.other\r\n          };\r\n      case 'SET_SELECTED_PROJECT':\r\n          return {\r\n              ...state,\r\n              selectedId: action.payload.selectedId\r\n          };\r\n      default:\r\n          return state;\r\n  }\r\n}\r\n","\r\nconst initialState = {\r\n    projectBody: 'test'\r\n};\r\n\r\nexport default function editor(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_PROJECT_BODY':\r\n            return {\r\n                ...state,\r\n                projectBody: action.payload.text\r\n            };\r\n        case 'CHANGE_PROJECT_TEXT':\r\n            return {\r\n                ...state,\r\n                projectBody: action.payload.text\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","\r\nconst initialState = {\r\n    motivation: 'I am the best...'\r\n};\r\n\r\nexport default function request(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'CHANGE_MOTIVATION':\r\n            return {\r\n                ...state,\r\n                motivation: action.payload.motivation\r\n            };\r\n        case 'SET_INITIAL_STATE':\r\n            return {\r\n                ...state,\r\n                motivation: action.payload.motivation\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","\r\nconst initialState = {\r\n    invitationPage: {\r\n        title: 'Invite other user into your projects',\r\n        buttons: [],\r\n        changeProjectListButton: {\r\n            text: 'See your own projects',\r\n            link: '/own-projects'\r\n        }\r\n    },\r\n    projectRequests: []\r\n};\r\n\r\nexport default function invitation(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_PROJECT_REQUESTS':\r\n            return {\r\n                ...state,\r\n                projectRequests: action.payload.projectRequests\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport authorization from './reducers/reducer-authorization';\r\nimport creating from \"./reducers/reducer-creating\";\r\nimport projects from \"./reducers/reducer-projects\";\r\nimport editor from \"./reducers/reducer-editor\";\r\nimport request from \"./reducers/reducer-request\";\r\nimport invitation from \"./reducers/reducer-invitation\";\r\n\r\nexport default combineReducers({\r\n    authorization,\r\n    creating,\r\n    projects,\r\n    editor,\r\n    request,\r\n    invitation\r\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './button.module.css';\r\n\r\n\r\nconst Button = (props) => {\r\n    const styleFromParent = props.styleButton || '';\r\n\r\n    return (\r\n        <button\r\n            className={ `${styles.button} ${styleFromParent}` }\r\n            onClick={ props.onClickButton }>\r\n            { props.text }\r\n        </button>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    styleButton: PropTypes.string,\r\n    onClickButton: PropTypes.func\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './input.module.css';\r\n\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <label className={ styles.labelBlock }>\r\n            { props.name }\r\n            <br/>\r\n            <input\r\n                type={ props.type }\r\n                className={ styles.input }\r\n                onChange={ props.onChangeInput }\r\n                value={ props.inputValue }/>\r\n        </label>\r\n    );\r\n};\r\n\r\nInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChangeInput: PropTypes.func,\r\n    inputValue: PropTypes.string\r\n};\r\n\r\nexport default Input;","import * as firebase from \"firebase/app\";\r\nimport 'firebase/firebase-auth';\r\nimport 'firebase/firebase-database';\r\n\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDwj-AbdZmydrTmGRY7ynn2ljezu-exkTI\",\r\n    authDomain: \"texting-c6aa6.firebaseapp.com\",\r\n    databaseURL: \"https://texting-c6aa6.firebaseio.com\",\r\n    projectId: \"texting-c6aa6\",\r\n    storageBucket: \"texting-c6aa6.appspot.com\",\r\n    messagingSenderId: \"62385937036\"\r\n};\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        firebase.initializeApp(config);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.database();\r\n        this.usersPath = 'projects/users/';\r\n        this.freeDataPath = 'projects/freeData/';\r\n        this.mainDataPath = 'projects/mainData/';\r\n        this.requestsPath = '/request/';\r\n    }\r\n    \r\n    signIn(email, password) {\r\n        return this.auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n    \r\n    async register(name, email, password) {\r\n      await this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n      return this.auth.currentUser.updateProfile({\r\n          displayName: name\r\n      })\r\n    }\r\n\r\n    handlerUserAuth() {\r\n        return new Promise ((resolve) => {\r\n            this.auth.onAuthStateChanged(resolve);\r\n        });\r\n    }\r\n\r\n    async createNewProject(uid, uName, title, description) {\r\n        const { usersPath, freeDataPath, mainDataPath } = this,\r\n            now = new Date(),\r\n            creatingDate = now.getDate() + '.' + (now.getMonth() + 1) + '.' + now.getFullYear(),\r\n            key = await this.db.ref().child('users').push().key\r\n        ;\r\n\r\n        this.db.ref(`${usersPath}${key}`).set({\r\n            usersIds: [uid]\r\n        });\r\n        this.db.ref(`${freeDataPath}${key}`).set({\r\n            usersNames: [uName],\r\n            title,\r\n            description,\r\n            creatingDate\r\n        });\r\n        this.db.ref(`${mainDataPath}${key}`).set({\r\n            body: ''\r\n        });\r\n\r\n    }\r\n\r\n    getUsersIds(projectId = '') {\r\n        const { usersPath } = this;\r\n\r\n        return this.db.ref(`${ usersPath }${ projectId }`).once('value');\r\n    }\r\n\r\n    getFreeData(projectId = '') {\r\n        const { freeDataPath } = this;\r\n\r\n        return this.db.ref(`${ freeDataPath }${ projectId }`).once('value');\r\n    }\r\n\r\n    getMainData(projectId) {\r\n        const { mainDataPath } = this;\r\n\r\n        return this.db.ref(`${mainDataPath}${projectId}/body`).once('value');\r\n    }\r\n\r\n    updateProjectBody(projectId, text) {\r\n        const { mainDataPath } = this;\r\n        const body = {\r\n            body: text\r\n        };\r\n        const updates = {};\r\n        updates[`${mainDataPath}${projectId}`] = body;\r\n\r\n\r\n        return this.db.ref().update(updates);\r\n    }\r\n\r\n    checkExistingRequests(projectId) {\r\n        const { mainDataPath, requestsPath } = this;\r\n\r\n        return this.db.ref(`${ mainDataPath }${ projectId }${ requestsPath }`).once('value');\r\n    }\r\n\r\n    sendRequest(projectId, requests) {\r\n        const { mainDataPath, requestsPath } = this;\r\n\r\n        this.db.ref(`${ mainDataPath }${ projectId }${ requestsPath }`).set(requests);\r\n    }\r\n\r\n    updateUsersInProject(projectId, usersIds, projectFreeData) {\r\n        const { usersPath, freeDataPath } = this;\r\n        const updates = {};\r\n        updates[`${usersPath}${projectId}`] = usersIds;\r\n        updates[`${freeDataPath}${projectId}`] = projectFreeData;\r\n\r\n        return this.db.ref().update(updates);\r\n    }\r\n\r\n    getProjectRequests(projectId) {\r\n        const { mainDataPath, requestsPath, db } = this;\r\n\r\n        return db.ref(`${ mainDataPath }${ projectId }${ requestsPath }`).once('value');\r\n    }\r\n}\r\n\r\nexport default new Firebase();","import firebase from '../../firebase/firebase';\r\n\r\n\r\nexport function changeName(event) {\r\n    return {\r\n        type: 'CHANGE_NAME',\r\n        payload: { userName: event.target.value }\r\n    };\r\n}\r\n\r\nexport function changeEmail(event) {\r\n    return {\r\n        type: 'CHANGE_EMAIL',\r\n        payload: { userEmail: event.target.value }\r\n    };\r\n}\r\n\r\nexport function changePassword(event) {\r\n    return {\r\n        type: 'CHANGE_PASSWORD',\r\n        payload: { userPassword: event.target.value }\r\n    };\r\n}\r\n\r\nexport function signUp() {\r\n    return (dispatch, getState) => {\r\n        const stateAuthorization = getState().authorization;\r\n        const name = stateAuthorization.userName;\r\n        const email = stateAuthorization.userEmail;\r\n        const password = stateAuthorization.userPassword;\r\n        firebase.register(name, email, password)\r\n            .then(() => dispatch(clearInputs()))\r\n            .catch(function(error) {\r\n                let errorCode = error.code;\r\n                let errorMessage = error.message;\r\n                console.log(errorCode, errorMessage);\r\n                dispatch(clearInputs());\r\n            })\r\n    }\r\n}\r\n\r\nexport function signIn() {\r\n    return (dispatch, getState) => {\r\n        const stateAuthorization = getState().authorization;\r\n        const email = stateAuthorization.userEmail;\r\n        const password = stateAuthorization.userPassword;\r\n        firebase.signIn(email, password)\r\n            .then(() => dispatch(clearInputs()))\r\n            .catch((err) => {\r\n                console.log(err.message);\r\n                dispatch(clearInputs())\r\n            })\r\n    }\r\n}\r\n\r\nexport function setAuthHandler() {\r\n    return (dispatch) => {\r\n        firebase.handlerUserAuth()\r\n            .then((authData) => {\r\n                if (authData !== null) {\r\n                    dispatch(changeUserStatus(authData, 1));\r\n                } else {\r\n                    const emptyData = {\r\n                        uid: '',\r\n                        displayName: ''\r\n                    };\r\n                    dispatch(changeUserStatus(emptyData, -1));\r\n                }\r\n            } )\r\n            .catch((err) => console.log(err.message) )\r\n    }\r\n}\r\n\r\nfunction clearInputs() {\r\n  return {\r\n      type: 'CLEAR_INPUTS',\r\n      payload: {\r\n          userName: '',\r\n          userEmail: '',\r\n          userPassword: ''\r\n      }\r\n  };\r\n}\r\n\r\nfunction changeUserStatus(authData, status) {\r\n    if (authData) {\r\n        return {\r\n            type: 'CHANGE_USER_STATUS',\r\n            payload: {\r\n                uid: authData.uid || '',\r\n                uName: authData.displayName || '',\r\n                isUserAuthorized: status\r\n            }\r\n        }\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Button from \"../../components/ui/button/button\";\r\nimport Input from \"../../components/ui/input/input\";\r\nimport styles from './authorization.module.css';\r\nimport {\r\n    changeEmail,\r\n    changeName,\r\n    changePassword,\r\n    signIn,\r\n    signUp\r\n} from \"../../store/actions/actions-authorization\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\n\r\n\r\nclass Authorization extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n\r\n        if (props.isUserAuthorized > 0) {\r\n            return <Redirect to={ '/' }/>;\r\n        }\r\n\r\n        return (<div className={ styles.authorization }>\r\n                <h1>Welcome</h1>\r\n                <Input\r\n                    name=\"Username\"\r\n                    type=\"text\"\r\n                    onChangeInput={ event => props.onChangeName(event) }\r\n                    inputValue={ props.userName }/>\r\n                <Input\r\n                    name=\"Email\"\r\n                    type=\"email\"\r\n                    onChangeInput={ event => props.onChangeEmail(event) }\r\n                    inputValue={ props.userEmail }/>\r\n                <Input\r\n                    name=\"Password\"\r\n                    type=\"password\"\r\n                    onChangeInput={ event => props.onChangePassword(event) }\r\n                    inputValue={ props.userPassword }/>\r\n                <div className={ styles.buttonsContainer }>\r\n                    <Link to={ '/own-projects' }>\r\n                        <Button\r\n                            text=\"Sign in\"\r\n                            onClickButton={ props.onSignIn }/>\r\n                    </Link>\r\n                    <Link to={ '/own-projects' }>\r\n                        <Button\r\n                            text=\"Sign up\"\r\n                            onClickButton={ props.onSignUp }/>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nAuthorization.propTypes = {\r\n    userName: PropTypes.string,\r\n    userEmail: PropTypes.string,\r\n    userPassword: PropTypes.string,\r\n    isUserAuthorized: PropTypes.number.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const scope = state.authorization;\r\n    return {\r\n        userName: scope.userName,\r\n        userEmail: scope.userEmail,\r\n        userPassword: scope.userPassword,\r\n        isUserAuthorized: scope.isUserAuthorized\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        onSignIn: () => {\r\n            dispatch(signIn());\r\n        },\r\n        onSignUp: () => {\r\n            dispatch(signUp());\r\n        },\r\n        onChangeName: (event) => {\r\n            dispatch(changeName(event));\r\n        },\r\n        onChangeEmail: (event) => {\r\n            dispatch(changeEmail(event));\r\n        },\r\n        onChangePassword: (event) => {\r\n            dispatch(changePassword(event));\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Authorization);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../button\";\r\nimport styles from './cancel-button.module.css';\r\n\r\nconst CancelButton = props => {\r\n    return (\r\n        <Button\r\n            styleButton={ styles.cancelButton }\r\n            text={ 'Cancel' }\r\n            onClickButton={ props.onClickCancel }/>\r\n    );\r\n};\r\n\r\nCancelButton.propTypes = {\r\n    onClickCancel: PropTypes.func\r\n};\r\n\r\n// Настоящий Ализариновый красный\r\n\r\nexport default CancelButton;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../../components/ui/button/button\";\r\nimport styles from './editor.module.css';\r\nimport CancelButton from \"../../components/ui/button/cancel/cancel-button\";\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport {connect} from \"react-redux\";\r\nimport {changeProjectText, getProjectBody, pushProjectChanges} from \"../../store/actions/actions-editor\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nclass Editor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.id = this.props.match.params.id;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getProjectBody(this.id);\r\n    }\r\n\r\n    render() {\r\n        const { props, id } = this;\r\n\r\n        if (props.isUserAuthorized <= 0) {\r\n            return <Redirect to={ '/' }/>;\r\n        }\r\n\r\n        return (\r\n            <div className={ styles.editor }>\r\n                <ContentEditable\r\n                className={ styles.projectText }\r\n                html={ props.projectBody }\r\n                onChange={ props.onChangeProjectText }/>\r\n                <div className={ styles.buttons }>\r\n                    <CancelButton/>\r\n                    <Button\r\n                    text={ 'Accept changes' }\r\n                    onClickButton={ props.onPushChanges.bind(this, id) }/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nEditor.propTypes = {\r\n    projectBody: PropTypes.string.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const editorState = state.editor,\r\n        authState = state.authorization\r\n    ;\r\n    return {\r\n        projectBody: editorState.projectBody,\r\n        isUserAuthorized: authState.isUserAuthorized\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getProjectBody: (id) => {\r\n            dispatch(getProjectBody(id));\r\n        },\r\n        onChangeProjectText: (event) => {\r\n            dispatch(changeProjectText(event));\r\n        },\r\n        onPushChanges: (id) => {\r\n            dispatch(pushProjectChanges(id));\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);\r\n","import firebase from '../../firebase/firebase';\r\n\r\nexport function getProjectBody(projectId) {\r\n    return async (dispatch) => {\r\n        const data = await firebase.getMainData(projectId);\r\n\r\n        dispatch(setProjectBody(data.val()));\r\n    }\r\n}\r\n\r\nexport function changeProjectText(event) {\r\n    return {\r\n        type: 'CHANGE_PROJECT_TEXT',\r\n        payload: {\r\n            text: event.target.value\r\n        }\r\n    }\r\n}\r\n\r\nexport function pushProjectChanges(id) {\r\n    return async (dispatch, getState) => {\r\n        const editorState = getState().editor;\r\n        const body = editorState.projectBody;\r\n        const resolve = await firebase.updateProjectBody(id, body);\r\n\r\n        console.log(resolve);\r\n    }\r\n}\r\n\r\nfunction setProjectBody(text) {\r\n    return {\r\n        type: 'SET_PROJECT_BODY',\r\n        payload: {\r\n            text\r\n        }\r\n    };\r\n}","import firebase from '../../firebase/firebase';\r\n\r\nexport function changeMotivation(event) {\r\n    return {\r\n        type: 'CHANGE_MOTIVATION',\r\n        payload: {\r\n            motivation: event.target.value\r\n        }\r\n    };\r\n}\r\n\r\nexport function checkExistingRequests(projectId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await firebase.checkExistingRequests(projectId);\r\n            const requests = data.val();\r\n\r\n            dispatch(addRequest(projectId, requests));\r\n\r\n        } catch (err) {\r\n            console.log('Error: ' + err.message);\r\n        }\r\n    }\r\n}\r\n\r\nfunction addRequest(projectId, otherRequest) {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const requestState = getState().request;\r\n            const authorizationState = getState().authorization;\r\n            const motivation = requestState.motivation;\r\n            const uid = authorizationState.uid;\r\n            const uName = authorizationState.uName;\r\n            const ownRequest = {\r\n                uid,\r\n                uName,\r\n                motivation\r\n            };\r\n            const requests = otherRequest ? otherRequest : [];\r\n\r\n            requests.push(ownRequest);\r\n\r\n            const response = await firebase.sendRequest(projectId, requests);\r\n\r\n            dispatch(setInitialState());\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function setInitialState() {\r\n    const InitialText = 'I am the best...';\r\n\r\n    return {\r\n        type: 'SET_INITIAL_STATE',\r\n        payload: {\r\n            motivation: InitialText\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../../components/ui/button/button\";\r\nimport styles from './request.module.css';\r\nimport CancelButton from \"../../components/ui/button/cancel/cancel-button\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport {connect} from \"react-redux\";\r\nimport {changeMotivation, checkExistingRequests, setInitialState} from \"../../store/actions/actions-request\";\r\n\r\nconst RequestParticipation = props => {\r\n    const projectId = props.match.params.id;\r\n\r\n    if (props.isUserAuthorized <= 0) {\r\n        return <Redirect to={ '/' }/>;\r\n    }\r\n\r\n    return (\r\n        <div className={ styles.request }>\r\n            <h2>Why You</h2>\r\n            <ContentEditable\r\n                className={ styles.description }\r\n                html={ props.motivation }\r\n                onChange={ props.onChangeMotivation }/>\r\n            <div>\r\n                <Link to={ '/other-projects' }>\r\n                    <CancelButton\r\n                    onClickCancel={ props.onCancelRequest }/>\r\n                </Link>\r\n                <Link to={ '/other-projects' }>\r\n                    <Button\r\n                        text={ 'Send' }\r\n                        onClickButton={ props.onSendRequest.bind(this, projectId) }/>\r\n                </Link>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nRequestParticipation.propTypes = {\r\n    motivation: PropTypes.string.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const requestState = state.request,\r\n        authState = state.authorization\r\n    ;\r\n    return {\r\n        motivation: requestState.motivation,\r\n        isUserAuthorized: authState.isUserAuthorized\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        onChangeMotivation: (event) => {\r\n            dispatch(changeMotivation(event));\r\n        },\r\n        onSendRequest: (projectId) => {\r\n            dispatch(checkExistingRequests(projectId));\r\n        },\r\n        onCancelRequest: () => {\r\n            dispatch(setInitialState());\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestParticipation);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../../components/ui/button/button\";\r\nimport styles from './creating.module.css';\r\nimport CancelButton from \"../../components/ui/button/cancel/cancel-button\";\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {changeDescriptionProject, changeNameProject, setNewProject} from \"../../store/actions/actions-creating\";\r\n\r\nconst Creating = props => {\r\n    if (props.isUserAuthorized <= 0) {\r\n        return <Redirect to={ '/' }/>;\r\n    }\r\n\r\n    return (\r\n        <div className={ styles.creating }>\r\n            <h1>Create your own project</h1>\r\n            <h2>Name</h2>\r\n            <ContentEditable\r\n                className={ styles.creatingName }\r\n                html={ props.nameProject }\r\n                onChange={ props.onChangeName }/>\r\n            <h2>Description</h2>\r\n            <ContentEditable\r\n                className={ styles.creatingDescription }\r\n                html={ props.descriptionProject }\r\n                onChange={ props.onChangeDescription }/>\r\n            <div>\r\n                <Link to={ '/own-projects' }>\r\n                    <CancelButton/>\r\n                </Link>\r\n                <Link to={ '/own-projects' }>\r\n                    <Button\r\n                        text={ 'Accept' }\r\n                        onClickButton={ props.createNewProject }/>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nCreating.propTypes = {\r\n    nameProject: PropTypes.string,\r\n    descriptionProject: PropTypes.string\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const creatingState = state.creating,\r\n        authState = state.authorization\r\n    ;\r\n    return {\r\n        nameProject: creatingState.nameProject,\r\n        descriptionProject: creatingState.descriptionProject,\r\n        isUserAuthorized: authState.isUserAuthorized\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        onChangeName: (event) => {\r\n            dispatch(changeNameProject(event));\r\n        },\r\n        onChangeDescription: (event) => {\r\n            dispatch(changeDescriptionProject(event));\r\n        },\r\n        createNewProject: () => {\r\n            dispatch(setNewProject());\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Creating);","import firebase from '../../firebase/firebase';\r\n\r\nexport function changeNameProject(event) {\r\n    return {\r\n        type: 'CHANGE_NAME_PROJECT',\r\n        payload: { nameProject: event.target.value }\r\n    }\r\n}\r\n\r\nexport function changeDescriptionProject(event) {\r\n    return {\r\n        type: 'CHANGE_DESCRIPTION_PROJECT',\r\n        payload: { descriptionProject: event.target.value }\r\n    }\r\n}\r\n\r\nexport function setNewProject() {\r\n    return async (dispatch, getState) => {\r\n        const stateCreating = getState().creating,\r\n            name = stateCreating.nameProject,\r\n            description = stateCreating.descriptionProject,\r\n            stateAuthorization = getState().authorization,\r\n            uid = stateAuthorization.uid,\r\n            uName = stateAuthorization.uName\r\n        ;\r\n\r\n        const response = await firebase.createNewProject(uid, uName, name, description);\r\n        console.log('new Project was created');\r\n    }\r\n}","import firebase from '../../firebase/firebase';\r\n\r\nexport function setIdsAndFreeData() {\r\n    return async (dispatch, getState) => {\r\n        const usersIds = await firebase.getUsersIds(),\r\n            projectsIds = usersIds.val(),\r\n            uid = getState().authorization.uid\r\n        ;\r\n        let ownProjectsIds = [];\r\n\r\n        for (let key in projectsIds) {\r\n            const usersIds = projectsIds[key].usersIds || [];\r\n\r\n            if (projectsIds.hasOwnProperty(key) && usersIds.includes(uid)) {\r\n                ownProjectsIds.push(key);\r\n            }\r\n        }\r\n\r\n        dispatch(pushProjectsIdsToState(ownProjectsIds));\r\n        dispatch(setFreeData(ownProjectsIds));\r\n    }\r\n}\r\n\r\nfunction setFreeData(ownProjectsIds) {\r\n    return async (dispatch) => {\r\n        const freeData = await firebase.getFreeData(),\r\n            projectsFreeData = freeData.val()\r\n        ;\r\n        let ownProjectsData = [],\r\n            otherProjectsData = []\r\n        ;\r\n\r\n        for (let key in projectsFreeData) {\r\n            if (projectsFreeData.hasOwnProperty(key)) {\r\n                projectsFreeData[key]['id'] = key;\r\n\r\n                if (ownProjectsIds.includes(key)) {\r\n                    ownProjectsData.push(projectsFreeData[key]);\r\n                } else {\r\n                    otherProjectsData.push(projectsFreeData[key]);\r\n                }\r\n            }\r\n        }\r\n        dispatch(pushFreeDataToState(ownProjectsData, otherProjectsData));\r\n    }\r\n}\r\n\r\nfunction pushProjectsIdsToState(projectsIds) {\r\n    return {\r\n        type: 'SET_OWN_PROJECTS_IDS',\r\n        payload: projectsIds\r\n    }\r\n}\r\n\r\nfunction pushFreeDataToState(ownProjectsFreeData, otherProjectsData) {\r\n    return {\r\n        type: 'SET_PROJECTS_FREE_DATA',\r\n        payload: {\r\n            own: ownProjectsFreeData,\r\n            other: otherProjectsData\r\n        }\r\n    }\r\n}\r\n\r\nexport function selectItem(id) {\r\n    return {\r\n        type: 'SET_SELECTED_PROJECT',\r\n        payload: {\r\n            selectedId: id\r\n        }\r\n    };\r\n}\r\n\r\nexport function removeUserFromProject(projectId) {\r\n    return async (dispatch, getState) => {\r\n        const authState = getState().authorization,\r\n            uid = authState.uid,\r\n            uName = authState.uName,\r\n            responseUserIds = await firebase.getUsersIds(projectId),\r\n            projectUsersIds = responseUserIds.val().usersIds,\r\n            updatedUsersIds = projectUsersIds.filter((id) => {\r\n                return id !== uid;\r\n            });\r\n        let updatedProjectFreeData = [];\r\n\r\n        if (updatedUsersIds.length === 0) {\r\n            const body = [];\r\n\r\n            await firebase.updateProjectBody(projectId, body);\r\n        } else {\r\n            const responseFreeData = await firebase.getFreeData(projectId),\r\n                projectFreeData = responseFreeData.val(),\r\n                usersNames = [...projectFreeData.usersNames],\r\n                updatedUsersNames = usersNames.filter((name) => {\r\n                    return uName !== name;\r\n                })\r\n                ;\r\n            updatedProjectFreeData = {\r\n                ...projectFreeData,\r\n                usersNames: updatedUsersNames\r\n            };\r\n        }\r\n\r\n\r\n        await firebase.updateUsersInProject(projectId, updatedUsersIds, updatedProjectFreeData);\r\n        dispatch(setIdsAndFreeData());\r\n    }\r\n}\r\n\r\nexport function clearSelectedItem() {\r\n    return {\r\n        type: 'SET_SELECTED_PROJECT',\r\n        payload: {\r\n            selectedId: ''\r\n        }\r\n    };\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../../ui/button/button\";\r\nimport styles from './projects-item.module.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport { selectItem } from \"../../../store/actions/actions-projects\";\r\n\r\nconst ProjectsItem = ({\r\n                          pageData,\r\n                          projectsData,\r\n                          onClickHandler,\r\n                          selectedId,\r\n                          onSelectItem\r\n}) => {\r\n    const projects = projectsData.map((project, index) => {\r\n        const id = project.id || project.uid || '';\r\n\r\n        const buttons = pageData.buttons.map(( buttonData, index ) => {\r\n            const projectLink = buttonData.dynamicLink ? id : '';\r\n\r\n            if (buttonData.link) {\r\n                return  (\r\n                    <Link\r\n                        to={ buttonData.link + projectLink }\r\n                        key={ index }\r\n                    >\r\n                        <Button\r\n                            styleButton={ styles.itemButton }\r\n                            text={ buttonData.text }\r\n                        />\r\n                    </Link>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Button\r\n                        key={ index }\r\n                        styleButton={ styles.itemButton }\r\n                        text={ buttonData.text }\r\n                        onClickButton={ (id) => onClickHandler(id) }\r\n                        // onClickButton={ onLeaveProject.bind(this, project.id) }\r\n                    />\r\n                )\r\n            }\r\n\r\n        });\r\n\r\n        let projectClassName = styles.projectItems;\r\n\r\n        if ( selectedId === id ) {\r\n            projectClassName = styles.projectItemsSelected;\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={ projectClassName }\r\n                key={ index }\r\n                onClick={ onSelectItem.bind(this, id) }\r\n            >\r\n                <div className={ styles.itemText }>\r\n                    <span>#{ index + 1 }</span>\r\n                    <span>{ project.title || project.uName }</span>\r\n                </div>\r\n                <div>\r\n                    { buttons }\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n    return (\r\n        <div>\r\n            { projects }\r\n        </div>\r\n    );\r\n};\r\n\r\nProjectsItem.propTypes = {\r\n    pageData: PropTypes.object.isRequired,\r\n    projectsData: PropTypes.array.isRequired,\r\n    selectedId: PropTypes.string,\r\n    onClickHandler: PropTypes.func,\r\n    onSelectItem: PropTypes.func\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const projectsState = state.projects;\r\n    return {\r\n        selectedId: projectsState.selectedId\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        onSelectItem: (projectId) => {\r\n            dispatch(selectItem(projectId));\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsItem);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProjectsItem from \"../item/projects-item\";\r\nimport styles from './projects-list.module.css';\r\nimport Button from \"../../ui/button/button\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ProjectsList = ({ pageData, projectsData, onClickHandler }) => {\r\n    return (\r\n        <div className={ styles.projectsList }>\r\n            <Link\r\n                className={ styles.link }\r\n                to={ pageData.changeProjectListButton.link }\r\n            >\r\n                <Button\r\n                    text={ pageData.changeProjectListButton.text }\r\n                />\r\n            </Link>\r\n            <h1\r\n                style={{ textAlign: 'center' }}\r\n            >\r\n                { pageData.title }\r\n            </h1>\r\n            <ProjectsItem\r\n                pageData={ pageData }\r\n                projectsData={ projectsData }\r\n                onClickHandler={ onClickHandler }\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nProjectsList.propTypes = {\r\n    pageData: PropTypes.object.isRequired,\r\n    projectsData: PropTypes.array.isRequired,\r\n    onClickHandler: PropTypes.func\r\n};\r\n\r\nexport default ProjectsList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './project-info.module.css';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst ProjectInfo = ({selectedProjectId, projectsData}) => {\r\n\r\n    const filteredData = projectsData.filter((project) => {\r\n        return selectedProjectId === project.id;\r\n    });\r\n    const projectData = filteredData[0] || {};\r\n    const name = projectData.title || 'Name Project';\r\n    const description = projectData.description || 'Description';\r\n    const date = projectData.creatingDate || 'Date';\r\n    const usersArray = projectData.usersNames || [''];\r\n    const usersNames = usersArray.map((userName, index) => {\r\n        return <span key={ index }>{ userName }</span>\r\n    });\r\n\r\n    return (\r\n        <div className={ styles.projectInfo }>\r\n            <h2>{ name }</h2>\r\n            <p className={ styles.description }>{ description }</p>\r\n            <div className={ styles.usersNames }>\r\n                <span className={ styles.titleType }>Users:</span>\r\n                { usersNames }\r\n            </div>\r\n            <div className={ styles.date }>\r\n                <span className={ styles.titleType }>Date of creation:</span>\r\n                <span>{ date }</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nProjectInfo.propTypes = {\r\n    projectsData: PropTypes.array\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const projectState = state.projects;\r\n    return {\r\n        selectedProjectId: projectState.selectedProjectId\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProjectInfo);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../../ui/button/button\";\r\nimport styles from './project-create.module.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ProjectCreate = props => {\r\n    return (\r\n        <div className={ styles.projectCreate }>\r\n            <Link to={ '/create' }>\r\n                <Button\r\n                    text={ \"Create New Project\" }/>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nProjectCreate.propTypes = {\r\n    \r\n};\r\n\r\nexport default ProjectCreate;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../ui/button/button\";\r\nimport styles from './motivation.module.css';\r\n\r\nconst Motivation = props => {\r\n    return (\r\n        <div className={ styles.motivation }>\r\n            <h2>User Name</h2>\r\n            <div className={ styles.motivationText }>Why you</div>\r\n            <div>\r\n                <Button\r\n                    styleButton={ styles.denyButton }\r\n                    text={ 'Deny' }/>\r\n                <Button\r\n                    text={ 'Accept' }/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nMotivation.propTypes = {\r\n\r\n};\r\n\r\nexport default Motivation;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProjectsList from \"../projects/list/projects-list\";\r\nimport ProjectInfo from \"../projects/info/project-info\";\r\nimport ProjectCreate from \"../projects/create/project-create\";\r\nimport styles from './working-space.module.css';\r\nimport Motivation from \"../motivation/motivation\";\r\n\r\nconst WorkingSpace = ({ pageData, projectsData, withBlockForCreating, onClickHandler = null }) => {\r\n    const rightBlock = withBlockForCreating ? (\r\n        <div className={ styles.rightColumn }>\r\n            <ProjectInfo\r\n            projectsData={ projectsData }/>\r\n            <ProjectCreate/>\r\n        </div>\r\n    ) : (\r\n        <Motivation/>\r\n    ) ;\r\n\r\n    return (\r\n        <div className={ styles.projects }>\r\n            <div>\r\n                <ProjectsList\r\n                    pageData={ pageData }\r\n                    projectsData={ projectsData }\r\n                    onClickHandler={ onClickHandler }\r\n                />\r\n            </div>\r\n            { rightBlock }\r\n        </div>\r\n    );\r\n};\r\n\r\nWorkingSpace.propTypes = {\r\n    withBlockForCreating: PropTypes.bool.isRequired,\r\n    pageData: PropTypes.object.isRequired,\r\n    projectsData: PropTypes.array.isRequired,\r\n    onClickHandler: PropTypes.func\r\n};\r\n\r\nexport default WorkingSpace;\r\n","import firebase from '../../firebase/firebase';\r\n\r\nexport function setProjectRequests(projectId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await firebase.getProjectRequests(projectId),\r\n                projectRequests = response.val() || []\r\n            ;\r\n\r\n            dispatch(setStateRequests(projectRequests));\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }  \r\n        \r\n    }\r\n}\r\n\r\nfunction setStateRequests(projectRequests) {\r\n    return {\r\n        type: 'SET_PROJECT_REQUESTS',\r\n        payload: {\r\n            projectRequests\r\n        }\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WorkingSpace from \"../../components/two-page-working-space/working-space\";\r\nimport {connect} from \"react-redux\";\r\nimport {setProjectRequests} from \"../../store/actions/actions-invitation\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {clearSelectedItem} from \"../../store/actions/actions-projects\";\r\n\r\n\r\n\r\nclass Invitation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {\r\n            match,\r\n            setRequests,\r\n            clearId\r\n        } = this.props,\r\n            projectId = match.params.id\r\n        ;\r\n        setRequests(projectId);\r\n        clearId();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            invitationPage,\r\n            projectRequests,\r\n            isUserAuthorized\r\n        } = this.props;\r\n\r\n        if (isUserAuthorized <= 0) {\r\n            return <Redirect to={ '/' }/>;\r\n        }\r\n\r\n        return (\r\n            <WorkingSpace\r\n                pageData={ invitationPage }\r\n                projectsData={ projectRequests }\r\n                withBlockForCreating={ false }\r\n                // onClickHandler={ func }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nInvitation.propTypes = {\r\n\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const invitationState = state.invitation,\r\n        authState = state.authorization\r\n    ;\r\n    return {\r\n        invitationPage: invitationState.invitationPage,\r\n        projectRequests: invitationState.projectRequests,\r\n        isUserAuthorized: authState.isUserAuthorized\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setRequests: (projectId) => {\r\n            dispatch(setProjectRequests(projectId));\r\n        },\r\n        clearId: () => {\r\n            dispatch(clearSelectedItem());\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Invitation);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WorkingSpace from \"../../components/two-page-working-space/working-space\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst OtherProjects = props => {\r\n    if (props.isUserAuthorized <= 0) {\r\n        return <Redirect to={ '/' }/>;\r\n    }\r\n\r\n    return (\r\n        <WorkingSpace\r\n            withBlockForCreating={ true }\r\n            pageData={ props.otherProjectsPage }\r\n            projectsData={ props.otherProjectsFreeData }\r\n        />\r\n    );\r\n};\r\n\r\nOtherProjects.propTypes = {\r\n    otherProjectsPage: PropTypes.object.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const projectsState = state.projects,\r\n        authState = state.authorization\r\n    ;\r\n    return {\r\n        otherProjectsPage: projectsState.otherProjectsPage,\r\n        otherProjectsFreeData: projectsState.otherProjectsFreeData,\r\n        isUserAuthorized: authState.isUserAuthorized\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OtherProjects);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WorkingSpace from \"../../components/two-page-working-space/working-space\";\r\nimport {connect} from \"react-redux\";\r\nimport {removeUserFromProject, setIdsAndFreeData} from \"../../store/actions/actions-projects\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass OwnProjects extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        this.props.getDatabase();\r\n    }\r\n\r\n    render() {\r\n        const { props } = this;\r\n\r\n        if (props.isUserAuthorized <= 0) {\r\n            return <Redirect to={ '/' }/>;\r\n        }\r\n\r\n        return (\r\n            <WorkingSpace\r\n                pageData = { props.ownProjectsPage }\r\n                projectsData = { props.ownProjectsFreeData }\r\n                withBlockForCreating={ true }\r\n                onClickHandler={ props.onLeaveProject }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nOwnProjects.propTypes = {\r\n    userProjectsIds: PropTypes.array,\r\n    ownProjectsPage: PropTypes.object.isRequired,\r\n    ownProjectsFreeData: PropTypes.array.isRequired,\r\n    isUserAuthorized: PropTypes.number\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const projectsState = state.projects,\r\n        authState = state.authorization\r\n    ;\r\n    return {\r\n        userProjectsIds: projectsState.userProjectsIds,\r\n        ownProjectsPage: projectsState.ownProjectsPage,\r\n        ownProjectsFreeData: projectsState.ownProjectsFreeData,\r\n        isUserAuthorized: authState.isUserAuthorized\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getDatabase: () => {\r\n            dispatch(setIdsAndFreeData());\r\n        },\r\n        onLeaveProject: (projectId) => {\r\n            dispatch(removeUserFromProject(projectId));\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OwnProjects);\r\n","import PropTypes from 'prop-types';\r\nimport styles from './loading.module.css';\r\nimport {connect} from \"react-redux\";\r\nimport {setAuthHandler} from \"../../store/actions/actions-authorization\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport React, {Component} from 'react';\r\n\r\nclass Loading extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.handleAuthStatus();\r\n    }\r\n\r\n    render() {\r\n        const {props} = this,\r\n            status = props.isUserAuthorized\r\n        ;\r\n        let path = props.location.pathname;\r\n        if (status > 0) {\r\n            path = '/' ? '/own-projects' : path ;\r\n            return <Redirect to={ path }/>;\r\n        } else if (status < 0) {\r\n            return <Redirect to={ '/auth' }/>;\r\n        } else {\r\n            return (\r\n                <div className={ styles.loading }>\r\n                    <div className={ styles.spinner }>\r\n                        <div className={styles.doubleBounce1}/>\r\n                        <div className={styles.doubleBounce2}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nLoading.propTypes = {\r\n    isUserAuthorized: PropTypes.number.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const authState = state.authorization;\r\n    return {\r\n        isUserAuthorized: authState.isUserAuthorized\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleAuthStatus: () => {\r\n            dispatch(setAuthHandler());\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Loading);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Authorization from \"../pages/authorization/authorization\";\r\nimport Editor from \"../pages/editor/editor\";\r\nimport RequestParticipation from \"../pages/request-participation/request\";\r\nimport Creating from \"../pages/creating/creating\";\r\nimport Invitation from \"../pages/invitation/invitation\";\r\nimport OtherProjects from \"../pages/other-projects/other-projects\";\r\nimport OwnProjects from \"../pages/own-projects/own-projects\";\r\nimport Loading from \"../pages/loading/loading\";\r\n\r\nconst Root = ({ store }) => (\r\n    <Provider store={ store }>\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={ Loading } />\r\n                <Route path=\"/auth\" component={ Authorization } />\r\n                <Route path=\"/editor/:id\" component={ Editor } />\r\n                <Route path=\"/request/:id\" component={ RequestParticipation } />\r\n                <Route path=\"/create\" component={ Creating } />\r\n                <Route path=\"/own-projects\" component={ OwnProjects } />\r\n                <Route path=\"/other-projects\" component={ OtherProjects } />\r\n                <Route path=\"/invitations/:id\" component={ Invitation } />\r\n            </Switch>\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\nRoot.propTypes = {\r\n    store: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Root","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { applyMiddleware, createStore } from \"redux\";\nimport RootReducer from './store/root-reducer';\nimport * as serviceWorker from './serviceWorker';\nimport Root from \"./components/Root\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools} from 'redux-devtools-extension';\n\nconst store = createStore(RootReducer, composeWithDevTools(applyMiddleware(thunk)) );\n\nReactDOM.render(\n    <Root store={ store } />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectInfo\":\"project-info_projectInfo__3bFr_\",\"description\":\"project-info_description__GUGrF\",\"titleType\":\"project-info_titleType__IF9CI\",\"usersNames\":\"project-info_usersNames__2m6g-\",\"date\":\"project-info_date__1Dh0g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectItems\":\"projects-item_projectItems__2Kge8\",\"projectItemsSelected\":\"projects-item_projectItemsSelected__3dnIh\",\"itemText\":\"projects-item_itemText__1F85u\",\"itemButton\":\"projects-item_itemButton__1Tddy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"loading_loading__aGMZQ\",\"spinner\":\"loading_spinner__yyCpl\",\"doubleBounce1\":\"loading_doubleBounce1__3lYS8\",\"doubleBounce2\":\"loading_doubleBounce2__2z_XN\",\"sk-bounce\":\"loading_sk-bounce__3jTYc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"editor_editor__3xneX\",\"projectText\":\"editor_projectText__2AO_5\",\"buttons\":\"editor_buttons__2C2x5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"creating\":\"creating_creating__3b_32\",\"creatingName\":\"creating_creatingName__K-7C_\",\"creatingDescription\":\"creating_creatingDescription__3gdEj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"motivation\":\"motivation_motivation__12Qgt\",\"motivationText\":\"motivation_motivationText__1PJdI\",\"denyButton\":\"motivation_denyButton__16ffC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__3HYfo\",\"labelBlock\":\"input_labelBlock__1bhDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authorization\":\"authorization_authorization__CCCCe\",\"buttonsContainer\":\"authorization_buttonsContainer__Mpxh5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"request\":\"request_request__1-w7k\",\"description\":\"request_description__1V6tt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectsList\":\"projects-list_projectsList__3np6v\",\"link\":\"projects-list_link__OKAkO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projects\":\"working-space_projects__Ov1gQ\",\"rightColumn\":\"working-space_rightColumn__29GsN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__RyD10\"};"],"sourceRoot":""}