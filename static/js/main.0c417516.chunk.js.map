{"version":3,"sources":["components/ui/button/button.module.css","components/ui/button/cancel/cancel-button.module.css","store/reducers/reducer-authorization.js","store/reducers/reducer-creating.js","store/reducers/reducer-projects.js","store/reducers/reducer-editor.js","store/reducers/reducer-request.js","store/reducers/reducer-invitation.js","store/root-reducer.js","serviceWorker.js","components/ui/button/button.js","components/ui/input/input.js","firebase/firebase.js","store/actions/actions-authorization.js","pages/authorization/authorization.js","components/ui/button/cancel/cancel-button.js","pages/editor/editor.js","store/actions/actions-editor.js","store/actions/actions-request.js","pages/request-participation/request.js","pages/creating/creating.js","store/actions/actions-creating.js","store/actions/actions-projects.js","components/projects/item/projects-item.js","components/projects/list/projects-list.js","components/projects/info/project-info.js","components/projects/manage/project-manage.js","store/actions/actions-invitation.js","components/motivation/motivation.js","components/two-page-working-space/working-space.js","pages/invitation/invitation.js","pages/other-projects/other-projects.js","pages/own-projects/own-projects.js","pages/loading/loading.js","components/Root.js","index.js","components/projects/info/project-info.module.css","components/projects/item/projects-item.module.css","components/motivation/motivation.module.css","pages/loading/loading.module.css","pages/editor/editor.module.css","pages/creating/creating.module.css","components/ui/input/input.module.css","pages/authorization/authorization.module.css","pages/request-participation/request.module.css","components/projects/list/projects-list.module.css","components/projects/manage/project-manage.module.css","components/two-page-working-space/working-space.module.css"],"names":["module","exports","button","cancelButton","initialState","userName","userEmail","userPassword","isUserAuthorized","uid","uName","nameProject","descriptionProject","userProjectsIds","ownProjectsFreeData","otherProjectsFreeData","ownProjectsPage","title","buttons","text","link","dynamicLink","changeProjectListButton","otherProjectsPage","selectedId","projectBody","motivation","invitationPage","projectRequests","selectedProject","selectedRequest","combineReducers","authorization","state","arguments","length","undefined","action","type","Object","objectSpread","payload","creating","projects","own","other","editor","request","invitation","Boolean","window","location","hostname","match","Button","props","styleFromParent","styleButton","react_default","a","createElement","className","concat","styles","onClick","onClickButton","Input","labelBlock","name","input","onChange","onChangeInput","value","inputValue","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","Firebase","classCallCheck","this","auth","db","usersPath","usersArray","freeDataPath","mainDataPath","requestsPath","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","signOut","_this","Promise","resolve","onAuthStateChanged","description","now","Date","creatingDate","getDate","getMonth","getFullYear","ref","child","push","key","set","usersIds","usersNames","body","once","updates","update","ownRequest","projectFreeData","changeUserStatus","authData","status","Authorization","possibleConstructorReturn","getPrototypeOf","call","react_router","to","event","onChangeName","onChangeEmail","onChangePassword","buttonsContainer","react_router_dom","button_button","onSignIn","onSignUp","Component","connect","authState","dispatch","getState","stateAuthorization","signIn","then","response","user","catch","err","console","log","message","register","error","errorCode","code","errorMessage","target","changeName","changeEmail","changePassword","CancelButton","onClickCancel","Editor","id","params","getProjectBody","react_contenteditable_default","projectText","html","onChangeProjectText","cancel_button","history","onPushChanges","bind","editorState","_ref","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","getMainData","sent","val","stop","_x","apply","changeProjectText","_ref2","_callee2","_context2","updateProjectBody","_x2","_x3","pushProjectChanges","addRequest","requestState","authorizationState","sendRequest","setInitialState","t0","onChangeMotivation","changeMotivation","onSendRequest","checkExistingRequests","onCancelRequest","creatingState","changeNameProject","onChangeDescription","changeDescriptionProject","createNewProject","stateCreating","creatingName","creatingDescription","setIdsAndFreeData","projectsIds","ownProjectsIds","_usersIds","getUsersIds","hasOwnProperty","includes","pushProjectsIdsToState","setFreeData","freeData","projectsFreeData","ownProjectsData","otherProjectsData","getFreeData","pushFreeDataToState","onSelectItem","pageData","projectsData","onClickHandler","map","project","index","buttonData","projectLink","itemButton","projectClassName","projectItems","projectItemsSelected","itemText","ProjectsList","projectsList","style","textAlign","projects_item","projectData","filter","date","projectInfo","titleType","onSignOut","projectCreate","createButton","setProjectRequests","requests","objectRequest","getProjectRequests","setStateRequests","abrupt","removeRequest","invitationState","projectsState","findSelectedRequest","findRequest","acceptUser","_ref3","_callee3","_invitationState$sele","responseIds","_responseIds$val","responseFreeData","_context3","toConsumableArray","updateUsersInProject","_x4","_x5","motivationText","WorkingSpace","withBlockForCreating","_ref$onClickHandler","rightBlock","rightColumn","project_info","project_manage","motivation_motivation","projects_list","Invitation","_this$props","setRequests","clearId","setProjectId","_this$props2","working_space","OwnProjects","getDatabase","onLeaveProject","responseUserIds","projectUsersIds","updatedUsersIds","updatedProjectFreeData","updatedUsersNames","removeUserFromProject","Loading","handleAuthStatus","path","pathname","loading","spinner","doubleBounce1","doubleBounce2","handlerUserAuth","Root","store","es","exact","component","RequestParticipation","Creating","OtherProjects","createStore","RootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","components_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister","denyButton","sk-bounce"],"mappings":"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","file":"static/js/main.0c417516.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__RyD10\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cancelButton\":\"cancel-button_cancelButton__3hcP9\"};","\r\nconst initialState = {\r\n    userName: '',\r\n    userEmail: '',\r\n    userPassword: '',\r\n    isUserAuthorized: 0,\r\n    uid: 0,\r\n    uName: ''\r\n};\r\n\r\nexport default function authorization(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'CHANGE_NAME':\r\n            return {\r\n                ...state,\r\n                userName: action.payload.userName\r\n            };\r\n        case 'CHANGE_EMAIL':\r\n            return {\r\n                ...state,\r\n                userEmail: action.payload.userEmail\r\n            };\r\n        case 'CHANGE_PASSWORD':\r\n            return {\r\n                ...state,\r\n                userPassword: action.payload.userPassword\r\n            };\r\n        case 'CLEAR_INPUTS':\r\n            return {\r\n                ...state,\r\n                userName: action.payload.userName,\r\n                userEmail: action.payload.userEmail,\r\n                userPassword: action.payload.userPassword\r\n            };\r\n        case 'CHANGE_USER_STATUS':\r\n            return {\r\n                ...state,\r\n                uid: action.payload.uid,\r\n                isUserAuthorized: action.payload.isUserAuthorized,\r\n                uName: action.payload.uName\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nconst initialState = {\r\n    nameProject: 'Name Project',\r\n    descriptionProject: 'It\\'s my project...'\r\n};\r\n\r\nexport default function creating(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'CHANGE_NAME_PROJECT':\r\n            return {\r\n                ...state,\r\n                nameProject: action.payload.nameProject\r\n            };\r\n        case 'CHANGE_DESCRIPTION_PROJECT':\r\n            return {\r\n                ...state,\r\n                descriptionProject: action.payload.descriptionProject\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","\r\nconst initialState = {\r\n    userProjectsIds: [],\r\n    ownProjectsFreeData: [],\r\n    otherProjectsFreeData: [],\r\n    ownProjectsPage: {\r\n        title: 'Your own projects',\r\n        buttons: [\r\n            {\r\n                text: 'Edit',\r\n                link: '/editor/',\r\n                dynamicLink: true\r\n            },\r\n            {\r\n                text: 'Leave',\r\n                link: ''\r\n            },\r\n            {\r\n                text: 'Invite',\r\n                link: '/invitations/',\r\n                dynamicLink: true\r\n            }\r\n        ],\r\n        changeProjectListButton: {\r\n            text: 'See other projects',\r\n            link: '/other-projects'\r\n        }\r\n    },\r\n    otherProjectsPage: {\r\n        title: 'Projects of other users',\r\n        buttons: [\r\n            {\r\n                text: 'Request',\r\n                link: '/request/',\r\n                dynamicLink: true\r\n            }\r\n        ],\r\n        changeProjectListButton: {\r\n            text: 'See your own projects',\r\n            link: '/own-projects'\r\n        }\r\n    },\r\n    selectedId: ''\r\n};\r\n\r\nexport default function projects(state = initialState, action) {\r\n  switch (action.type) {\r\n      case 'SET_OWN_PROJECTS_IDS':\r\n          return {\r\n              ...state,\r\n              userProjectsIds: action.payload\r\n          };\r\n      case 'SET_PROJECTS_FREE_DATA':\r\n          return {\r\n              ...state,\r\n              ownProjectsFreeData: action.payload.own,\r\n              otherProjectsFreeData: action.payload.other\r\n          };\r\n      case 'SET_SELECTED_PROJECT':\r\n          return {\r\n              ...state,\r\n              selectedId: action.payload.selectedId\r\n          };\r\n      default:\r\n          return state;\r\n  }\r\n}\r\n","\r\nconst initialState = {\r\n    projectBody: 'test'\r\n};\r\n\r\nexport default function editor(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_PROJECT_BODY':\r\n            return {\r\n                ...state,\r\n                projectBody: action.payload.text\r\n            };\r\n        case 'CHANGE_PROJECT_TEXT':\r\n            return {\r\n                ...state,\r\n                projectBody: action.payload.text\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","\r\nconst initialState = {\r\n    motivation: 'I am the best...'\r\n};\r\n\r\nexport default function request(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'CHANGE_MOTIVATION':\r\n            return {\r\n                ...state,\r\n                motivation: action.payload.motivation\r\n            };\r\n        case 'SET_INITIAL_STATE':\r\n            return {\r\n                ...state,\r\n                motivation: action.payload.motivation\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","\r\nconst initialState = {\r\n    invitationPage: {\r\n        title: 'Invite other user into your projects',\r\n        buttons: [],\r\n        changeProjectListButton: {\r\n            text: 'See your own projects',\r\n            link: '/own-projects'\r\n        }\r\n    },\r\n    projectRequests: [],\r\n    selectedProject: '',\r\n    selectedRequest: null\r\n};\r\n\r\nexport default function invitation(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_PROJECT_REQUESTS':\r\n            return {\r\n                ...state,\r\n                projectRequests: action.payload.projectRequests\r\n            };\r\n        case 'SET_REQUEST':\r\n            return {\r\n                ...state,\r\n                selectedRequest: action.payload.selectedRequest\r\n            };\r\n        case 'SET_INVITATION_PROJECT':\r\n            return {\r\n                ...state,\r\n                selectedProject: action.payload.selectedProject\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport authorization from './reducers/reducer-authorization';\r\nimport creating from \"./reducers/reducer-creating\";\r\nimport projects from \"./reducers/reducer-projects\";\r\nimport editor from \"./reducers/reducer-editor\";\r\nimport request from \"./reducers/reducer-request\";\r\nimport invitation from \"./reducers/reducer-invitation\";\r\n\r\nexport default combineReducers({\r\n    authorization,\r\n    creating,\r\n    projects,\r\n    editor,\r\n    request,\r\n    invitation\r\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './button.module.css';\r\n\r\n\r\nconst Button = (props) => {\r\n    const styleFromParent = props.styleButton || '';\r\n\r\n    return (\r\n        <button\r\n            className={ `${styles.button} ${styleFromParent}` }\r\n            onClick={ props.onClickButton }>\r\n            { props.text }\r\n        </button>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    styleButton: PropTypes.string,\r\n    onClickButton: PropTypes.func\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './input.module.css';\r\n\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <label className={ styles.labelBlock }>\r\n            { props.name }\r\n            <br/>\r\n            <input\r\n                type={ props.type }\r\n                className={ styles.input }\r\n                onChange={ props.onChangeInput }\r\n                value={ props.inputValue }/>\r\n        </label>\r\n    );\r\n};\r\n\r\nInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChangeInput: PropTypes.func,\r\n    inputValue: PropTypes.string\r\n};\r\n\r\nexport default Input;","import * as firebase from \"firebase/app\";\r\nimport 'firebase/firebase-auth';\r\nimport 'firebase/firebase-database';\r\n\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDwj-AbdZmydrTmGRY7ynn2ljezu-exkTI\",\r\n    authDomain: \"texting-c6aa6.firebaseapp.com\",\r\n    databaseURL: \"https://texting-c6aa6.firebaseio.com\",\r\n    projectId: \"texting-c6aa6\",\r\n    storageBucket: \"texting-c6aa6.appspot.com\",\r\n    messagingSenderId: \"62385937036\"\r\n};\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        firebase.initializeApp(config);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.database();\r\n        this.usersPath = 'projects/users/';\r\n        this.usersArray = '/usersIds/';\r\n        this.freeDataPath = 'projects/freeData/';\r\n        this.mainDataPath = 'projects/mainData/';\r\n        this.requestsPath = '/request/';\r\n    }\r\n    \r\n    signIn(email, password) {\r\n        return this.auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n    \r\n    async register(name, email, password) {\r\n      await this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n      return this.auth.currentUser.updateProfile({\r\n          displayName: name\r\n      })\r\n    }\r\n    \r\n    signOut() {\r\n        const { auth } = this;\r\n\r\n        return auth.signOut();\r\n    } \r\n\r\n    handlerUserAuth() {\r\n        return new Promise ((resolve) => {\r\n            this.auth.onAuthStateChanged(resolve);\r\n        });\r\n    }\r\n\r\n    async createNewProject(uid, uName, title, description) {\r\n        const { usersPath, freeDataPath, mainDataPath } = this,\r\n            now = new Date(),\r\n            creatingDate = now.getDate() + '.' + (now.getMonth() + 1) + '.' + now.getFullYear(),\r\n            key = await this.db.ref().child('users').push().key\r\n        ;\r\n\r\n        this.db.ref(`${usersPath}${key}`).set({\r\n            usersIds: [uid]\r\n        });\r\n        this.db.ref(`${freeDataPath}${key}`).set({\r\n            usersNames: [uName],\r\n            title,\r\n            description,\r\n            creatingDate\r\n        });\r\n        this.db.ref(`${mainDataPath}${key}`).set({\r\n            body: ''\r\n        });\r\n\r\n    }\r\n\r\n    getUsersIds(projectId = '') {\r\n        const { usersPath } = this;\r\n\r\n        return this.db.ref(`${ usersPath }${ projectId }`).once('value');\r\n    }\r\n\r\n    getFreeData(projectId = '') {\r\n        const { freeDataPath } = this;\r\n\r\n        return this.db.ref(`${ freeDataPath }${ projectId }`).once('value');\r\n    }\r\n\r\n    getMainData(projectId) {\r\n        const { mainDataPath } = this;\r\n\r\n        return this.db.ref(`${mainDataPath}${projectId}/body`).once('value');\r\n    }\r\n\r\n    updateProjectBody(projectId, text) {\r\n        const { mainDataPath } = this,\r\n            updates = {}\r\n        ;\r\n        let body = {\r\n            body: text\r\n        };\r\n        \r\n        if (!text) {\r\n            body = [];\r\n        }\r\n        \r\n        updates[`${mainDataPath}${projectId}`] = body;\r\n\r\n\r\n        return this.db.ref().update(updates);\r\n    }\r\n\r\n    checkExistingRequests(projectId) {\r\n        const { mainDataPath, requestsPath } = this;\r\n\r\n        return this.db.ref(`${ mainDataPath }${ projectId }${ requestsPath }`).once('value');\r\n    }\r\n\r\n    sendRequest(projectId, uid, ownRequest) {\r\n        const { mainDataPath, requestsPath } = this;\r\n\r\n        this.db.ref(`${ mainDataPath }${ projectId }${ requestsPath }${ uid }`).set(ownRequest);\r\n    }\r\n\r\n    updateUsersInProject(projectId, usersIds, projectFreeData) {\r\n        const { usersPath, usersArray, freeDataPath } = this;\r\n        const updates = {};\r\n        updates[`${usersPath}${projectId}${usersArray}`] = usersIds;\r\n        updates[`${freeDataPath}${projectId}`] = projectFreeData;\r\n\r\n        return this.db.ref().update(updates);\r\n    }\r\n\r\n    getProjectRequests(projectId) {\r\n        const { mainDataPath, requestsPath, db } = this;\r\n\r\n        return db.ref(`${ mainDataPath }${ projectId }${ requestsPath }`).once('value');\r\n    }\r\n\r\n    removeRequest(projectId, uid) {\r\n        const { mainDataPath, requestsPath, db } = this,\r\n            emptyRequest = []\r\n        ;\r\n\r\n        db.ref(`${ mainDataPath }${ projectId }${ requestsPath }${ uid }`).set(emptyRequest);\r\n    }\r\n}\r\n\r\nexport default new Firebase();","import firebase from '../../firebase/firebase';\r\n\r\n\r\nexport function changeName(event) {\r\n    return {\r\n        type: 'CHANGE_NAME',\r\n        payload: { userName: event.target.value }\r\n    };\r\n}\r\n\r\nexport function changeEmail(event) {\r\n    return {\r\n        type: 'CHANGE_EMAIL',\r\n        payload: { userEmail: event.target.value }\r\n    };\r\n}\r\n\r\nexport function changePassword(event) {\r\n    return {\r\n        type: 'CHANGE_PASSWORD',\r\n        payload: { userPassword: event.target.value }\r\n    };\r\n}\r\n\r\nexport function signUp() {\r\n    return (dispatch, getState) => {\r\n        const stateAuthorization = getState().authorization;\r\n        const name = stateAuthorization.userName;\r\n        const email = stateAuthorization.userEmail;\r\n        const password = stateAuthorization.userPassword;\r\n        firebase.register(name, email, password)\r\n            .then((response) => {\r\n                const authData = response.user;\r\n\r\n                dispatch(changeUserStatus(authData, 1));\r\n                dispatch(clearInputs());\r\n            })\r\n            .catch(function(error) {\r\n                let errorCode = error.code;\r\n                let errorMessage = error.message;\r\n                console.log(errorCode, errorMessage);\r\n                dispatch(clearInputs());\r\n            })\r\n    }\r\n}\r\n\r\nexport function signIn() {\r\n    return (dispatch, getState) => {\r\n        const stateAuthorization = getState().authorization;\r\n        const email = stateAuthorization.userEmail;\r\n        const password = stateAuthorization.userPassword;\r\n        firebase.signIn(email, password)\r\n            .then((response) => {\r\n                const authData = response.user;\r\n\r\n                dispatch(changeUserStatus(authData, 1));\r\n                dispatch(clearInputs());\r\n            })\r\n            .catch((err) => {\r\n                console.log('Data: ' + err.message);\r\n                dispatch(clearInputs())\r\n            })\r\n    }\r\n}\r\n\r\nexport function signOut() {\r\n    return async (dispatch) => {\r\n        try {\r\n            await firebase.signOut();\r\n            const emptyData = {\r\n                uid: '',\r\n                displayName: ''\r\n            };\r\n\r\n            dispatch(changeUserStatus(emptyData, -1));\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n}\r\n\r\nexport function setAuthHandler() {\r\n    return (dispatch) => {\r\n        firebase.handlerUserAuth()\r\n            .then((authData) => {\r\n                if (authData !== null) {\r\n                    dispatch(changeUserStatus(authData, 1));\r\n                } else {\r\n                    const emptyData = {\r\n                        uid: '',\r\n                        displayName: ''\r\n                    };\r\n                    dispatch(changeUserStatus(emptyData, -1));\r\n                }\r\n            } )\r\n            .catch((err) => console.log(err.message) )\r\n    }\r\n}\r\n\r\nfunction clearInputs() {\r\n  return {\r\n      type: 'CLEAR_INPUTS',\r\n      payload: {\r\n          userName: '',\r\n          userEmail: '',\r\n          userPassword: ''\r\n      }\r\n  };\r\n}\r\n\r\nfunction changeUserStatus(authData, status) {\r\n    if (authData) {\r\n        return {\r\n            type: 'CHANGE_USER_STATUS',\r\n            payload: {\r\n                uid: authData.uid || '',\r\n                uName: authData.displayName || '',\r\n                isUserAuthorized: status\r\n            }\r\n        }\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Button from \"../../components/ui/button/button\";\r\nimport Input from \"../../components/ui/input/input\";\r\nimport styles from './authorization.module.css';\r\nimport {\r\n    changeEmail,\r\n    changeName,\r\n    changePassword,\r\n    signIn,\r\n    signUp\r\n} from \"../../store/actions/actions-authorization\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\n\r\n\r\nclass Authorization extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n\r\n        if (props.isUserAuthorized > 0) {\r\n            return <Redirect to={ '/' }/>;\r\n        }\r\n\r\n        return (<div className={ styles.authorization }>\r\n                <h1>Welcome</h1>\r\n                <Input\r\n                    name=\"Username\"\r\n                    type=\"text\"\r\n                    onChangeInput={ event => props.onChangeName(event) }\r\n                    inputValue={ props.userName }/>\r\n                <Input\r\n                    name=\"Email\"\r\n                    type=\"email\"\r\n                    onChangeInput={ event => props.onChangeEmail(event) }\r\n                    inputValue={ props.userEmail }/>\r\n                <Input\r\n                    name=\"Password\"\r\n                    type=\"password\"\r\n                    onChangeInput={ event => props.onChangePassword(event) }\r\n                    inputValue={ props.userPassword }/>\r\n                <div className={ styles.buttonsContainer }>\r\n                    <Link to={ '/own-projects' }>\r\n                        <Button\r\n                            text=\"Sign in\"\r\n                            onClickButton={ props.onSignIn }/>\r\n                    </Link>\r\n                    <Link to={ '/own-projects' }>\r\n                        <Button\r\n                            text=\"Sign up\"\r\n                            onClickButton={ props.onSignUp }/>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nAuthorization.propTypes = {\r\n    userName: PropTypes.string,\r\n    userEmail: PropTypes.string,\r\n    userPassword: PropTypes.string,\r\n    isUserAuthorized: PropTypes.number.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const authState = state.authorization;\r\n    return {\r\n        userName: authState.userName,\r\n        userEmail: authState.userEmail,\r\n        userPassword: authState.userPassword,\r\n        isUserAuthorized: authState.isUserAuthorized\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        onSignIn: () => {\r\n            dispatch(signIn());\r\n        },\r\n        onSignUp: () => {\r\n            dispatch(signUp());\r\n        },\r\n        onChangeName: (event) => {\r\n            dispatch(changeName(event));\r\n        },\r\n        onChangeEmail: (event) => {\r\n            dispatch(changeEmail(event));\r\n        },\r\n        onChangePassword: (event) => {\r\n            dispatch(changePassword(event));\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Authorization);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../button\";\r\nimport styles from './cancel-button.module.css';\r\n\r\nconst CancelButton = props => {\r\n    const text = props.text || 'Cancel';\r\n\r\n    return (\r\n        <Button\r\n            styleButton={ styles.cancelButton }\r\n            text={ text }\r\n            onClickButton={ props.onClickCancel }\r\n        />\r\n    );\r\n};\r\n\r\nCancelButton.propTypes = {\r\n    onClickCancel: PropTypes.func\r\n};\r\n\r\n// Настоящий Ализариновый красный\r\n\r\nexport default CancelButton;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../../components/ui/button/button\";\r\nimport styles from './editor.module.css';\r\nimport CancelButton from \"../../components/ui/button/cancel/cancel-button\";\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    changeProjectText,\r\n    getProjectBody,\r\n    pushProjectChanges\r\n} from \"../../store/actions/actions-editor\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport { createHashHistory } from 'history';\r\n\r\n\r\nclass Editor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.id = this.props.match.params.id;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getProjectBody(this.id);\r\n    }\r\n\r\n    render() {\r\n        const { props, id } = this,\r\n            ownProjectsPath = '/own-projects'\r\n        ;\r\n\r\n        if (props.isUserAuthorized <= 0) {\r\n            return <Redirect to={ '/' }/>;\r\n        }\r\n\r\n        return (\r\n            <div className={ styles.editor }>\r\n                <ContentEditable\r\n                className={ styles.projectText }\r\n                html={ props.projectBody }\r\n                onChange={ props.onChangeProjectText }/>\r\n                <div className={ styles.buttons }>\r\n                    <CancelButton\r\n                        text={ 'Exit' }\r\n                        onClickCancel={ () => props.history.push(ownProjectsPath) }\r\n                    />\r\n                    <Button\r\n                        text={ 'Accept changes' }\r\n                        onClickButton={ props.onPushChanges.bind(this, id) }\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nEditor.propTypes = {\r\n    projectBody: PropTypes.string.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const editorState = state.editor,\r\n        authState = state.authorization\r\n    ;\r\n    return {\r\n        projectBody: editorState.projectBody,\r\n        isUserAuthorized: authState.isUserAuthorized\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getProjectBody: (id) => {\r\n            dispatch(getProjectBody(id));\r\n        },\r\n        onChangeProjectText: (event) => {\r\n            dispatch(changeProjectText(event));\r\n        },\r\n        onPushChanges: (id) => {\r\n            dispatch(pushProjectChanges(id));\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);\r\n","import firebase from '../../firebase/firebase';\r\n\r\nexport function getProjectBody(projectId) {\r\n    return async (dispatch) => {\r\n        const data = await firebase.getMainData(projectId);\r\n\r\n        dispatch(setProjectBody(data.val()));\r\n    }\r\n}\r\n\r\nexport function changeProjectText(event) {\r\n    return {\r\n        type: 'CHANGE_PROJECT_TEXT',\r\n        payload: {\r\n            text: event.target.value\r\n        }\r\n    }\r\n}\r\n\r\nexport function pushProjectChanges(id) {\r\n    return async (dispatch, getState) => {\r\n        const editorState = getState().editor;\r\n        const body = editorState.projectBody;\r\n        const resolve = await firebase.updateProjectBody(id, body);\r\n\r\n        console.log(resolve);\r\n    }\r\n}\r\n\r\nfunction setProjectBody(text) {\r\n    return {\r\n        type: 'SET_PROJECT_BODY',\r\n        payload: {\r\n            text\r\n        }\r\n    };\r\n}","import firebase from '../../firebase/firebase';\r\n\r\nexport function changeMotivation(event) {\r\n    return {\r\n        type: 'CHANGE_MOTIVATION',\r\n        payload: {\r\n            motivation: event.target.value\r\n        }\r\n    };\r\n}\r\n\r\nexport function checkExistingRequests(projectId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await firebase.checkExistingRequests(projectId);\r\n            const requests = data.val();\r\n\r\n            dispatch(addRequest(projectId, requests));\r\n\r\n        } catch (err) {\r\n            console.log('Error: ' + err.message);\r\n        }\r\n    }\r\n}\r\n\r\nfunction addRequest(projectId) {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const requestState = getState().request,\r\n                authorizationState = getState().authorization,\r\n                motivation = requestState.motivation,\r\n                uid = authorizationState.uid,\r\n                uName = authorizationState.uName,\r\n                ownRequest = {\r\n                uName,\r\n                motivation\r\n            }\r\n            ;\r\n\r\n            const response = await firebase.sendRequest(projectId, uid, ownRequest);\r\n\r\n            dispatch(setInitialState());\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function setInitialState() {\r\n    const InitialText = 'I am the best...';\r\n\r\n    return {\r\n        type: 'SET_INITIAL_STATE',\r\n        payload: {\r\n            motivation: InitialText\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../../components/ui/button/button\";\r\nimport styles from './request.module.css';\r\nimport CancelButton from \"../../components/ui/button/cancel/cancel-button\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport {connect} from \"react-redux\";\r\nimport {changeMotivation, checkExistingRequests, setInitialState} from \"../../store/actions/actions-request\";\r\n\r\nconst RequestParticipation = props => {\r\n    const projectId = props.match.params.id;\r\n\r\n    if (props.isUserAuthorized <= 0) {\r\n        return <Redirect to={ '/' }/>;\r\n    }\r\n\r\n    return (\r\n        <div className={ styles.request }>\r\n            <h2>Why You</h2>\r\n            <ContentEditable\r\n                className={ styles.description }\r\n                html={ props.motivation }\r\n                onChange={ props.onChangeMotivation }/>\r\n            <div>\r\n                <Link to={ '/other-projects' }>\r\n                    <CancelButton\r\n                    onClickCancel={ props.onCancelRequest }/>\r\n                </Link>\r\n                <Link to={ '/other-projects' }>\r\n                    <Button\r\n                        text={ 'Send' }\r\n                        onClickButton={ props.onSendRequest.bind(this, projectId) }/>\r\n                </Link>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nRequestParticipation.propTypes = {\r\n    motivation: PropTypes.string.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const requestState = state.request,\r\n        authState = state.authorization\r\n    ;\r\n    return {\r\n        motivation: requestState.motivation,\r\n        isUserAuthorized: authState.isUserAuthorized\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        onChangeMotivation: (event) => {\r\n            dispatch(changeMotivation(event));\r\n        },\r\n        onSendRequest: (projectId) => {\r\n            dispatch(checkExistingRequests(projectId));\r\n        },\r\n        onCancelRequest: () => {\r\n            dispatch(setInitialState());\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestParticipation);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../../components/ui/button/button\";\r\nimport styles from './creating.module.css';\r\nimport CancelButton from \"../../components/ui/button/cancel/cancel-button\";\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {changeDescriptionProject, changeNameProject, setNewProject} from \"../../store/actions/actions-creating\";\r\n\r\nconst Creating = props => {\r\n    if (props.isUserAuthorized <= 0) {\r\n        return <Redirect to={ '/' }/>;\r\n    }\r\n\r\n    return (\r\n        <div className={ styles.creating }>\r\n            <h1>Create your own project</h1>\r\n            <h2>Name</h2>\r\n            <ContentEditable\r\n                className={ styles.creatingName }\r\n                html={ props.nameProject }\r\n                onChange={ props.onChangeName }/>\r\n            <h2>Description</h2>\r\n            <ContentEditable\r\n                className={ styles.creatingDescription }\r\n                html={ props.descriptionProject }\r\n                onChange={ props.onChangeDescription }/>\r\n            <div>\r\n                <Link to={ '/own-projects' }>\r\n                    <CancelButton/>\r\n                </Link>\r\n                <Link to={ '/own-projects' }>\r\n                    <Button\r\n                        text={ 'Accept' }\r\n                        onClickButton={ props.createNewProject }/>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nCreating.propTypes = {\r\n    nameProject: PropTypes.string,\r\n    descriptionProject: PropTypes.string\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const creatingState = state.creating,\r\n        authState = state.authorization\r\n    ;\r\n    return {\r\n        nameProject: creatingState.nameProject,\r\n        descriptionProject: creatingState.descriptionProject,\r\n        isUserAuthorized: authState.isUserAuthorized\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        onChangeName: (event) => {\r\n            dispatch(changeNameProject(event));\r\n        },\r\n        onChangeDescription: (event) => {\r\n            dispatch(changeDescriptionProject(event));\r\n        },\r\n        createNewProject: () => {\r\n            dispatch(setNewProject());\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Creating);","import firebase from '../../firebase/firebase';\r\n\r\nexport function changeNameProject(event) {\r\n    return {\r\n        type: 'CHANGE_NAME_PROJECT',\r\n        payload: { nameProject: event.target.value }\r\n    }\r\n}\r\n\r\nexport function changeDescriptionProject(event) {\r\n    return {\r\n        type: 'CHANGE_DESCRIPTION_PROJECT',\r\n        payload: { descriptionProject: event.target.value }\r\n    }\r\n}\r\n\r\nexport function setNewProject() {\r\n    return async (dispatch, getState) => {\r\n        const stateCreating = getState().creating,\r\n            name = stateCreating.nameProject,\r\n            description = stateCreating.descriptionProject,\r\n            stateAuthorization = getState().authorization,\r\n            uid = stateAuthorization.uid,\r\n            uName = stateAuthorization.uName\r\n        ;\r\n\r\n        const response = await firebase.createNewProject(uid, uName, name, description);\r\n        console.log('new Project was created');\r\n    }\r\n}","import firebase from '../../firebase/firebase';\r\n\r\nexport function setIdsAndFreeData() {\r\n    return async (dispatch, getState) => {\r\n        const usersIds = await firebase.getUsersIds(),\r\n            projectsIds = usersIds.val(),\r\n            uid = getState().authorization.uid\r\n        ;\r\n        let ownProjectsIds = [];\r\n\r\n        for (let key in projectsIds) {\r\n            const usersIds = projectsIds[key].usersIds || [];\r\n\r\n            if (projectsIds.hasOwnProperty(key) && usersIds.includes(uid)) {\r\n                ownProjectsIds.push(key);\r\n            }\r\n        }\r\n\r\n        dispatch(pushProjectsIdsToState(ownProjectsIds));\r\n        dispatch(setFreeData(ownProjectsIds));\r\n    }\r\n}\r\n\r\nfunction setFreeData(ownProjectsIds) {\r\n    return async (dispatch) => {\r\n        const freeData = await firebase.getFreeData(),\r\n            projectsFreeData = freeData.val()\r\n        ;\r\n        let ownProjectsData = [],\r\n            otherProjectsData = []\r\n        ;\r\n\r\n        for (let key in projectsFreeData) {\r\n            if (projectsFreeData.hasOwnProperty(key)) {\r\n                projectsFreeData[key]['id'] = key;\r\n\r\n                if (ownProjectsIds.includes(key)) {\r\n                    ownProjectsData.push(projectsFreeData[key]);\r\n                } else {\r\n                    otherProjectsData.push(projectsFreeData[key]);\r\n                }\r\n            }\r\n        }\r\n        dispatch(pushFreeDataToState(ownProjectsData, otherProjectsData));\r\n    }\r\n}\r\n\r\nfunction pushProjectsIdsToState(projectsIds) {\r\n    return {\r\n        type: 'SET_OWN_PROJECTS_IDS',\r\n        payload: projectsIds\r\n    }\r\n}\r\n\r\nfunction pushFreeDataToState(ownProjectsFreeData, otherProjectsData) {\r\n    return {\r\n        type: 'SET_PROJECTS_FREE_DATA',\r\n        payload: {\r\n            own: ownProjectsFreeData,\r\n            other: otherProjectsData\r\n        }\r\n    }\r\n}\r\n\r\nexport function selectItem(id) {\r\n    return {\r\n        type: 'SET_SELECTED_PROJECT',\r\n        payload: {\r\n            selectedId: id\r\n        }\r\n    };\r\n}\r\n\r\nexport function removeUserFromProject(projectId) {\r\n    return async (dispatch, getState) => {\r\n        const authState = getState().authorization,\r\n            uid = authState.uid,\r\n            uName = authState.uName,\r\n            responseUserIds = await firebase.getUsersIds(projectId),\r\n            projectUsersIds = responseUserIds.val().usersIds,\r\n            updatedUsersIds = projectUsersIds.filter((id) => {\r\n                return id !== uid;\r\n            });\r\n        let updatedProjectFreeData = [];\r\n\r\n        if (updatedUsersIds.length === 0) {\r\n            const body = '';\r\n\r\n            await firebase.updateProjectBody(projectId, body);\r\n        } else {\r\n            const responseFreeData = await firebase.getFreeData(projectId),\r\n                projectFreeData = responseFreeData.val(),\r\n                usersNames = [...projectFreeData.usersNames],\r\n                updatedUsersNames = usersNames.filter((name) => {\r\n                    return uName !== name;\r\n                })\r\n                ;\r\n            updatedProjectFreeData = {\r\n                ...projectFreeData,\r\n                usersNames: updatedUsersNames\r\n            };\r\n        }\r\n\r\n\r\n        await firebase.updateUsersInProject(projectId, updatedUsersIds, updatedProjectFreeData);\r\n        dispatch(setIdsAndFreeData());\r\n    }\r\n}\r\n\r\nexport function clearSelectedItem() {\r\n    return {\r\n        type: 'SET_SELECTED_PROJECT',\r\n        payload: {\r\n            selectedId: ''\r\n        }\r\n    };\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../../ui/button/button\";\r\nimport styles from './projects-item.module.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport { selectItem } from \"../../../store/actions/actions-projects\";\r\n\r\nconst ProjectsItem = ({\r\n                          pageData,\r\n                          projectsData,\r\n                          onClickHandler,\r\n                          selectedId,\r\n                          onSelectItem\r\n}) => {\r\n    const projects = projectsData.map((project, index) => {\r\n        const id = project.id || project.uid || '';\r\n\r\n        const buttons = pageData.buttons.map(( buttonData, index ) => {\r\n            const projectLink = buttonData.dynamicLink ? id : '';\r\n\r\n            if (buttonData.link) {\r\n                return  (\r\n                    <Link\r\n                        to={ buttonData.link + projectLink }\r\n                        key={ index }\r\n                    >\r\n                        <Button\r\n                            styleButton={ styles.itemButton }\r\n                            text={ buttonData.text }\r\n                        />\r\n                    </Link>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Button\r\n                        key={ index }\r\n                        styleButton={ styles.itemButton }\r\n                        text={ buttonData.text }\r\n                        onClickButton={ onClickHandler.bind({}, id) }\r\n                        // onClickButton={ onLeaveProject.bind(this, project.id) }\r\n                    />\r\n                )\r\n            }\r\n\r\n        });\r\n\r\n        let projectClassName = styles.projectItems;\r\n\r\n        if ( selectedId === id ) {\r\n            projectClassName = styles.projectItemsSelected;\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={ projectClassName }\r\n                key={ index }\r\n                onClick={ onSelectItem.bind(this, id) }\r\n            >\r\n                <div className={ styles.itemText }>\r\n                    <span>#{ index + 1 }</span>\r\n                    <span>{ project.title || project.uName }</span>\r\n                </div>\r\n                <div>\r\n                    { buttons }\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n    return (\r\n        <div>\r\n            { projects }\r\n        </div>\r\n    );\r\n};\r\n\r\nProjectsItem.propTypes = {\r\n    pageData: PropTypes.object.isRequired,\r\n    projectsData: PropTypes.array.isRequired,\r\n    selectedId: PropTypes.string,\r\n    onClickHandler: PropTypes.func,\r\n    onSelectItem: PropTypes.func\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const projectsState = state.projects;\r\n    return {\r\n        selectedId: projectsState.selectedId\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        onSelectItem: (projectId) => {\r\n            dispatch(selectItem(projectId));\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsItem);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProjectsItem from \"../item/projects-item\";\r\nimport styles from './projects-list.module.css';\r\nimport Button from \"../../ui/button/button\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ProjectsList = ({ pageData, projectsData, onClickHandler }) => {\r\n    return (\r\n        <div className={ styles.projectsList }>\r\n            <Link\r\n                className={ styles.link }\r\n                to={ pageData.changeProjectListButton.link }\r\n            >\r\n                <Button\r\n                    text={ pageData.changeProjectListButton.text }\r\n                />\r\n            </Link>\r\n            <h1\r\n                style={{ textAlign: 'center' }}\r\n            >\r\n                { pageData.title }\r\n            </h1>\r\n            <ProjectsItem\r\n                pageData={ pageData }\r\n                projectsData={ projectsData }\r\n                onClickHandler={ onClickHandler }\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nProjectsList.propTypes = {\r\n    pageData: PropTypes.object.isRequired,\r\n    projectsData: PropTypes.array.isRequired,\r\n    onClickHandler: PropTypes.func\r\n};\r\n\r\nexport default ProjectsList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './project-info.module.css';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst ProjectInfo = ({selectedId, projectsData}) => {\r\n\r\n    const filteredData = projectsData.filter((project) => {\r\n        return selectedId === project.id;\r\n    });\r\n    const projectData = filteredData[0] || {};\r\n    const name = projectData.title || 'Name Project';\r\n    const description = projectData.description || 'Description';\r\n    const date = projectData.creatingDate || 'Date';\r\n    const usersArray = projectData.usersNames || [''];\r\n    const usersNames = usersArray.map((userName, index) => {\r\n        return <span key={ index }>{ userName }</span>\r\n    });\r\n\r\n    return (\r\n        <div className={ styles.projectInfo }>\r\n            <h2>{ name }</h2>\r\n            <p className={ styles.description }>{ description }</p>\r\n            <div className={ styles.usersNames }>\r\n                <span className={ styles.titleType }>Users:</span>\r\n                { usersNames }\r\n            </div>\r\n            <div className={ styles.date }>\r\n                <span className={ styles.titleType }>Date of creation:</span>\r\n                <span>{ date }</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nProjectInfo.propTypes = {\r\n    projectsData: PropTypes.array,\r\n    selectedId: PropTypes.string\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const projectState = state.projects;\r\n    return {\r\n        selectedId: projectState.selectedId\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProjectInfo);\r\n","import React from 'react';\r\nimport Button from \"../../ui/button/button\";\r\nimport styles from './project-manage.module.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {signOut} from \"../../../store/actions/actions-authorization\";\r\n\r\nconst ProjectManage = ({ onSignOut }) => {\r\n    return (\r\n        <div className={ styles.projectCreate }>\r\n            <Link to={ '/create' }>\r\n                <Button\r\n                    text={ \"Create New Project\" }\r\n                    styleButton={ styles.createButton }\r\n                />\r\n            </Link>\r\n            <Button\r\n                text={ \"Sign out\" }\r\n                onClickButton={ onSignOut }\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        onSignOut: () => {\r\n            dispatch(signOut());\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ProjectManage);\r\n","import firebase from '../../firebase/firebase';\r\n\r\nexport function setProjectRequests(projectId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await firebase.getProjectRequests(projectId),\r\n                projectRequests = response.val() || []\r\n            ;\r\n            \r\n            if (!projectRequests.length) {\r\n                const requests = [];\r\n                for (let key in projectRequests) {\r\n                     if (projectRequests.hasOwnProperty(key)) {\r\n                         let objectRequest = { ...projectRequests[key] };\r\n                         objectRequest.uid = key;\r\n                         requests.push(objectRequest);\r\n                     }\r\n                }\r\n                dispatch(setStateRequests(requests));\r\n                return ;\r\n            }\r\n\r\n            dispatch(setStateRequests(projectRequests));\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }  \r\n        \r\n    }\r\n}\r\n\r\nfunction setStateRequests(projectRequests) {\r\n    return {\r\n        type: 'SET_PROJECT_REQUESTS',\r\n        payload: {\r\n            projectRequests\r\n        }\r\n    }\r\n}\r\n\r\nexport function findRequest(requests, id) {\r\n    const selectedRequestInArray = requests.filter((request) => {\r\n            return id === request.uid;\r\n        }),\r\n        selectedRequest = selectedRequestInArray[0] || null\r\n    ;\r\n\r\n    return {\r\n        type: 'SET_REQUEST',\r\n        payload: {\r\n            selectedRequest\r\n        }\r\n    }\r\n}\r\n\r\nexport function setProjectForInvitation(id) {\r\n    return {\r\n        type: 'SET_INVITATION_PROJECT',\r\n        payload: {\r\n            selectedProject: id\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeRequest() {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const invitationState = getState().invitation,\r\n                projectsState = getState().projects,\r\n                projectId = invitationState.selectedProject,\r\n                uid = projectsState.selectedId\r\n            ;\r\n\r\n            await firebase.removeRequest(projectId, uid);\r\n            await dispatch(setProjectRequests(projectId));\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n}\r\n\r\nexport function acceptUser() {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const invitationState = getState().invitation,\r\n                projectId = invitationState.selectedProject,\r\n                { uid, uName } = invitationState.selectedRequest,\r\n                responseIds = await firebase.getUsersIds(projectId),\r\n                { usersIds } = responseIds.val(),\r\n                responseFreeData = await firebase.getFreeData(projectId),\r\n                projectFreeData = responseFreeData.val()\r\n            ;\r\n\r\n            usersIds.push(uid);\r\n            projectFreeData.usersNames = [...projectFreeData.usersNames, uName];\r\n\r\n            await firebase.updateUsersInProject(projectId, usersIds, projectFreeData);\r\n            await dispatch(removeRequest());\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../ui/button/button\";\r\nimport styles from './motivation.module.css';\r\nimport {connect} from \"react-redux\";\r\nimport {acceptUser, findRequest, removeRequest} from \"../../store/actions/actions-invitation\";\r\nimport CancelButton from \"../ui/button/cancel/cancel-button\";\r\n\r\nconst Motivation = (props) => {\r\n    props.findSelectedRequest(props.projectRequests, props.selectedId);\r\n    if (!props.selectedRequest) {\r\n        return (\r\n            <div className={ styles.motivation }>\r\n                <h2>User Name</h2>\r\n                <div className={ styles.motivationText }>His offer</div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className={ styles.motivation }>\r\n                <h2>{ props.selectedRequest.uName }</h2>\r\n                <div className={ styles.motivationText }>{ props.selectedRequest.motivation }</div>\r\n                <div>\r\n                    <CancelButton\r\n                        text={ 'Deny' }\r\n                        onClickCancel={ props.removeRequest }\r\n                    />\r\n                    <Button\r\n                        text={ 'Accept' }\r\n                        onClickButton={ props.acceptUser }\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nMotivation.propTypes = {\r\n    selectedId: PropTypes.string,\r\n    invitationState: PropTypes.array\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const projectsState = state.projects,\r\n        invitationState = state.invitation\r\n    ;\r\n    return {\r\n        selectedId: projectsState.selectedId,\r\n        projectRequests: invitationState.projectRequests,\r\n        selectedRequest: invitationState.selectedRequest\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        findSelectedRequest: (requests, id) => {\r\n            dispatch(findRequest(requests, id));\r\n        },\r\n        removeRequest: () => {\r\n            dispatch(removeRequest());\r\n        },\r\n        acceptUser: () => {\r\n            dispatch(acceptUser());\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Motivation);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProjectsList from \"../projects/list/projects-list\";\r\nimport ProjectInfo from \"../projects/info/project-info\";\r\nimport ProjectCreate from \"../projects/manage/project-manage\";\r\nimport styles from './working-space.module.css';\r\nimport Motivation from \"../motivation/motivation\";\r\n\r\nconst WorkingSpace = ({ match, pageData, projectsData, withBlockForCreating, onClickHandler = null }) => {\r\n    const rightBlock = withBlockForCreating ? (\r\n        <div className={ styles.rightColumn }>\r\n            <ProjectInfo\r\n            projectsData={ projectsData }/>\r\n            <ProjectCreate/>\r\n        </div>\r\n    ) : (\r\n        <Motivation/>\r\n    ) ;\r\n\r\n    return (\r\n        <div className={ styles.projects }>\r\n            <div>\r\n                <ProjectsList\r\n                    pageData={ pageData }\r\n                    projectsData={ projectsData }\r\n                    onClickHandler={ onClickHandler }\r\n                />\r\n            </div>\r\n            { rightBlock }\r\n        </div>\r\n    );\r\n};\r\n\r\nWorkingSpace.propTypes = {\r\n    withBlockForCreating: PropTypes.bool.isRequired,\r\n    pageData: PropTypes.object.isRequired,\r\n    projectsData: PropTypes.array.isRequired,\r\n    onClickHandler: PropTypes.func\r\n};\r\n\r\nexport default WorkingSpace;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WorkingSpace from \"../../components/two-page-working-space/working-space\";\r\nimport {connect} from \"react-redux\";\r\nimport {setProjectForInvitation, setProjectRequests} from \"../../store/actions/actions-invitation\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {clearSelectedItem} from \"../../store/actions/actions-projects\";\r\n\r\n\r\n\r\nclass Invitation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {\r\n            match,\r\n            setRequests,\r\n            clearId,\r\n            setProjectId\r\n        } = this.props,\r\n            projectId = match.params.id\r\n        ;\r\n        setRequests(projectId);\r\n        setProjectId(projectId);\r\n        clearId();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            invitationPage,\r\n            projectRequests,\r\n            isUserAuthorized\r\n        } = this.props;\r\n\r\n        if (isUserAuthorized <= 0) {\r\n            return <Redirect to={ '/' }/>;\r\n        }\r\n\r\n        return (\r\n            <WorkingSpace\r\n                pageData={ invitationPage }\r\n                projectsData={ projectRequests }\r\n                withBlockForCreating={ false }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nInvitation.propTypes = {\r\n\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const invitationState = state.invitation,\r\n        authState = state.authorization\r\n    ;\r\n    return {\r\n        invitationPage: invitationState.invitationPage,\r\n        projectRequests: invitationState.projectRequests,\r\n        isUserAuthorized: authState.isUserAuthorized\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setRequests: (projectId) => {\r\n            dispatch(setProjectRequests(projectId));\r\n        },\r\n        clearId: () => {\r\n            dispatch(clearSelectedItem());\r\n        },\r\n        setProjectId: (projectId) => {\r\n            dispatch(setProjectForInvitation(projectId));\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Invitation);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WorkingSpace from \"../../components/two-page-working-space/working-space\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst OtherProjects = props => {\r\n    if (props.isUserAuthorized <= 0) {\r\n        return <Redirect to={ '/' }/>;\r\n    }\r\n\r\n    return (\r\n        <WorkingSpace\r\n            withBlockForCreating={ true }\r\n            pageData={ props.otherProjectsPage }\r\n            projectsData={ props.otherProjectsFreeData }\r\n        />\r\n    );\r\n};\r\n\r\nOtherProjects.propTypes = {\r\n    otherProjectsPage: PropTypes.object.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const projectsState = state.projects,\r\n        authState = state.authorization\r\n    ;\r\n    return {\r\n        otherProjectsPage: projectsState.otherProjectsPage,\r\n        otherProjectsFreeData: projectsState.otherProjectsFreeData,\r\n        isUserAuthorized: authState.isUserAuthorized\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OtherProjects);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WorkingSpace from \"../../components/two-page-working-space/working-space\";\r\nimport {connect} from \"react-redux\";\r\nimport {removeUserFromProject, setIdsAndFreeData} from \"../../store/actions/actions-projects\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass OwnProjects extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        this.props.getDatabase();\r\n    }\r\n\r\n    render() {\r\n        const { props } = this;\r\n\r\n        if (props.isUserAuthorized <= 0) {\r\n            return <Redirect to={ '/' }/>;\r\n        }\r\n\r\n        return (\r\n            <WorkingSpace\r\n                pageData = { props.ownProjectsPage }\r\n                projectsData = { props.ownProjectsFreeData }\r\n                withBlockForCreating={ true }\r\n                onClickHandler={ props.onLeaveProject }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nOwnProjects.propTypes = {\r\n    userProjectsIds: PropTypes.array,\r\n    ownProjectsPage: PropTypes.object.isRequired,\r\n    ownProjectsFreeData: PropTypes.array.isRequired,\r\n    isUserAuthorized: PropTypes.number\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const projectsState = state.projects,\r\n        authState = state.authorization\r\n    ;\r\n    return {\r\n        userProjectsIds: projectsState.userProjectsIds,\r\n        ownProjectsPage: projectsState.ownProjectsPage,\r\n        ownProjectsFreeData: projectsState.ownProjectsFreeData,\r\n        isUserAuthorized: authState.isUserAuthorized\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getDatabase: () => {\r\n            dispatch(setIdsAndFreeData());\r\n        },\r\n        onLeaveProject: (projectId) => {\r\n            dispatch(removeUserFromProject(projectId));\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OwnProjects);\r\n","import PropTypes from 'prop-types';\r\nimport styles from './loading.module.css';\r\nimport {connect} from \"react-redux\";\r\nimport {setAuthHandler} from \"../../store/actions/actions-authorization\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport React, {Component} from 'react';\r\n\r\nclass Loading extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.handleAuthStatus();\r\n    }\r\n\r\n    render() {\r\n        const {props} = this,\r\n            status = props.isUserAuthorized\r\n        ;\r\n        let path = props.location.pathname;\r\n        if (status > 0) {\r\n            path = '/' ? '/own-projects' : path ;\r\n            return <Redirect to={ path }/>;\r\n        } else if (status < 0) {\r\n            return <Redirect to={ '/auth' }/>;\r\n        } else {\r\n            return (\r\n                <div className={ styles.loading }>\r\n                    <div className={ styles.spinner }>\r\n                        <div className={styles.doubleBounce1}/>\r\n                        <div className={styles.doubleBounce2}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nLoading.propTypes = {\r\n    isUserAuthorized: PropTypes.number.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const authState = state.authorization;\r\n    return {\r\n        isUserAuthorized: authState.isUserAuthorized\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleAuthStatus: () => {\r\n            dispatch(setAuthHandler());\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Loading);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Authorization from \"../pages/authorization/authorization\";\r\nimport Editor from \"../pages/editor/editor\";\r\nimport RequestParticipation from \"../pages/request-participation/request\";\r\nimport Creating from \"../pages/creating/creating\";\r\nimport Invitation from \"../pages/invitation/invitation\";\r\nimport OtherProjects from \"../pages/other-projects/other-projects\";\r\nimport OwnProjects from \"../pages/own-projects/own-projects\";\r\nimport Loading from \"../pages/loading/loading\";\r\n\r\nconst Root = ({ store }) => (\r\n    <Provider store={ store }>\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={ Loading } />\r\n                <Route path=\"/auth\" component={ Authorization } />\r\n                <Route path=\"/editor/:id\" component={ Editor } />\r\n                <Route path=\"/request/:id\" component={ RequestParticipation } />\r\n                <Route path=\"/create\" component={ Creating } />\r\n                <Route path=\"/own-projects\" component={ OwnProjects } />\r\n                <Route path=\"/other-projects\" component={ OtherProjects } />\r\n                <Route path=\"/invitations/:id\" component={ Invitation } />\r\n            </Switch>\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\nRoot.propTypes = {\r\n    store: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Root","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { applyMiddleware, createStore } from \"redux\";\nimport RootReducer from './store/root-reducer';\nimport * as serviceWorker from './serviceWorker';\nimport Root from \"./components/Root\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools} from 'redux-devtools-extension';\n\nconst store = createStore(RootReducer, composeWithDevTools(applyMiddleware(thunk)) );\n\nReactDOM.render(\n    <Root store={ store } />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectInfo\":\"project-info_projectInfo__3bFr_\",\"description\":\"project-info_description__GUGrF\",\"titleType\":\"project-info_titleType__IF9CI\",\"usersNames\":\"project-info_usersNames__2m6g-\",\"date\":\"project-info_date__1Dh0g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectItems\":\"projects-item_projectItems__2Kge8\",\"projectItemsSelected\":\"projects-item_projectItemsSelected__3dnIh\",\"itemText\":\"projects-item_itemText__1F85u\",\"itemButton\":\"projects-item_itemButton__1Tddy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"motivation\":\"motivation_motivation__12Qgt\",\"motivationText\":\"motivation_motivationText__1PJdI\",\"denyButton\":\"motivation_denyButton__16ffC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"loading_loading__aGMZQ\",\"spinner\":\"loading_spinner__yyCpl\",\"doubleBounce1\":\"loading_doubleBounce1__3lYS8\",\"doubleBounce2\":\"loading_doubleBounce2__2z_XN\",\"sk-bounce\":\"loading_sk-bounce__3jTYc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"editor_editor__3xneX\",\"projectText\":\"editor_projectText__2AO_5\",\"buttons\":\"editor_buttons__2C2x5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"creating\":\"creating_creating__3b_32\",\"creatingName\":\"creating_creatingName__K-7C_\",\"creatingDescription\":\"creating_creatingDescription__3gdEj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__3HYfo\",\"labelBlock\":\"input_labelBlock__1bhDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authorization\":\"authorization_authorization__CCCCe\",\"buttonsContainer\":\"authorization_buttonsContainer__Mpxh5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"request\":\"request_request__1-w7k\",\"description\":\"request_description__1V6tt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectsList\":\"projects-list_projectsList__3np6v\",\"link\":\"projects-list_link__OKAkO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectCreate\":\"project-manage_projectCreate__1WASl\",\"createButton\":\"project-manage_createButton__SRxOj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projects\":\"working-space_projects__Ov1gQ\",\"rightColumn\":\"working-space_rightColumn__29GsN\"};"],"sourceRoot":""}